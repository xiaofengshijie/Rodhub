-- StarLight 脚本
local repo = 'https://raw.githubusercontent.com/mstudio45/LinoriaLib/main/'
local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()
local Options = Library.Options
local Toggles = Library.Toggles
Library.ShowToggleFrameInKeybinds = true
Library.ShowCustomCursor = true
Library.NotifySide = "Right"

local Window = Library:CreateWindow({
    Title = 'StarLight',
    Center = true,
    AutoShow = true,
    Resizable = true,
    ShowCustomCursor = true,
    NotifySide = "Right",
    TabPadding = 8,
    MenuFadeTime = 0.2
})

local Tabs = {
    Main = Window:AddTab('主要功能'),
    ESP = Window:AddTab('ESP'),
    Cheats = Window:AddTab('外挂功能'),
    Floors = Window:AddTab('楼层功能'),
    ['界面设置'] = Window:AddTab('界面设置'),
}

-- 主要功能内容
local LeftGroupBox = Tabs.Main:AddLeftGroupbox('控制')
LeftGroupBox:AddLabel('这里是主要功能区域')

-- 自动互动功能
local AutoInteract = {
    Enabled = false,
    Connection = nil,
    Range = 12.5,
    Interval = 0.05,
    LastCheck = 0,
    IgnoredNames = {
        HidePrompt = true, ClimbPrompt = true, PushPrompt = true,
        InteractPrompt = true, PropPrompt = true,
        StarRiftPrompt = true, RiftPrompt = true
    },
    IgnoredParents = {
        Padlock = true, Seek_Arm = true, KeyObtainFake = true
    }
}

-- 自动互动功能实现
local function setupAutoInteract()
    if AutoInteract.Enabled then
        -- 如果已经存在连接，先断开
        if AutoInteract.Connection then
            AutoInteract.Connection:Disconnect()
            AutoInteract.Connection = nil
        end
        
        local Players = game:GetService("Players")
        local RunService = game:GetService("RunService")
        local Workspace = game:GetService("Workspace")
        local ProximityPromptService = game:GetService("ProximityPromptService")
        
        local player = Players.LocalPlayer
        local rooms = Workspace:WaitForChild("CurrentRooms")
        
        local fireOk = pcall(function()
            fireproximityprompt(Instance.new("ProximityPrompt"))
        end)
        
        local function firePrompt(prompt)
            if not (prompt and prompt.Enabled) then return end
            if fireOk and fireproximityprompt then
                fireproximityprompt(prompt)
            else
                prompt:InputHoldBegin()
                task.wait(prompt.HoldDuration or 0)
                prompt:InputHoldEnd()
            end
        end
        
        AutoInteract.Connection = RunService.Heartbeat:Connect(function(dt)
            AutoInteract.LastCheck = AutoInteract.LastCheck + dt
            if AutoInteract.LastCheck < AutoInteract.Interval then return end
            AutoInteract.LastCheck = 0
            
            local char = player.Character
            if not char then return end
            local hrp = char:FindFirstChild("HumanoidRootPart")
            if not hrp then return end
            local pos = hrp.Position
            
            -- 只扫描当前房间，减少遍历
            for _, prompt in ipairs(rooms:GetDescendants()) do
                if prompt:IsA("ProximityPrompt") and prompt.Enabled
                   and not AutoInteract.IgnoredNames[prompt.Name]
                   and not AutoInteract.IgnoredParents[prompt.Parent.Name] then
                    local part = prompt.Parent
                    if part:IsA("Model") then part = part:FindFirstChildWhichIsA("BasePart") end
                    if part and part:IsA("BasePart")
                       and (part.Position - pos).Magnitude <= AutoInteract.Range then
                        firePrompt(prompt)
                    end
                end
            end
        end)
        
        -- 玩家重生时自动重连
        player.CharacterAdded:Connect(function()
            if AutoInteract.Connection and not AutoInteract.Connection.Connected then
                setupAutoInteract()
            end
        end)
    else
        -- 关闭自动互动
        if AutoInteract.Connection then
            AutoInteract.Connection:Disconnect()
            AutoInteract.Connection = nil
        end
    end
end

-- 速度提升功能
local SpeedBoost = {
    Enabled = false,
    Connection = nil,
    TargetSpeed = 18,
    MaxSpeed = 22  -- 默认最大速度
}

-- 速度提升功能实现
local function setupSpeedBoost()
    local RunService = game:GetService("RunService")
    local Players = game:GetService("Players")
    local player = Players.LocalPlayer
    
    if SpeedBoost.Enabled then
        -- 如果已经存在连接，先断开
        if SpeedBoost.Connection then
            SpeedBoost.Connection:Disconnect()
            SpeedBoost.Connection = nil
        end
        
        local function applySpeed(character)
            local humanoid = character:WaitForChild("Humanoid")
            -- 应用速度，但不超过当前最大速度
            local actualSpeed = math.min(SpeedBoost.TargetSpeed, SpeedBoost.MaxSpeed)
            humanoid.WalkSpeed = actualSpeed
        end
        
        local function onCharacterAdded(character)
            applySpeed(character)
            if SpeedBoost.Connection then
                SpeedBoost.Connection:Disconnect()
            end
            SpeedBoost.Connection = RunService.RenderStepped:Connect(function()
                local hum = character:FindFirstChildOfClass("Humanoid")
                if hum and hum.WalkSpeed ~= math.min(SpeedBoost.TargetSpeed, SpeedBoost.MaxSpeed) then
                    -- 应用速度，但不超过当前最大速度
                    local actualSpeed = math.min(SpeedBoost.TargetSpeed, SpeedBoost.MaxSpeed)
                    hum.WalkSpeed = actualSpeed
                end
            end)
        end
        
        -- 首次加载
        if player.Character then
            onCharacterAdded(player.Character)
        end
        
        -- 重生后
        player.CharacterAdded:Connect(onCharacterAdded)
    else
        -- 关闭速度提升
        if SpeedBoost.Connection then
            SpeedBoost.Connection:Disconnect()
            SpeedBoost.Connection = nil
        end
        
        -- 恢复默认速度
        if player.Character then
            local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.WalkSpeed = 16 -- 默认速度
            end
        end
    end
end

-- 添加自动互动控件
LeftGroupBox:AddToggle('AutoInteract', {
    Text = '自动互动',
    Default = false,
    Tooltip = '自动与附近的物品互动',
    Callback = function(Value)
        AutoInteract.Enabled = Value
        setupAutoInteract()
    end
})

-- 添加自动互动快捷键
LeftGroupBox:AddKeyPicker('AutoInteractKeybind', {
    Default = 'R',
    SyncToggleState = true,
    Mode = 'Toggle',
    Text = '自动互动',
    NoUI = false,
    Callback = function(Value)
        LeftGroupBox:GetToggle('AutoInteract'):SetValue(Value)
    end,
    ChangedCallback = function(New)
        -- 快捷键改变时的处理
    end
})

-- 添加速度提升控件
LeftGroupBox:AddToggle('SpeedBoost', {
    Text = '速度提升',
    Default = false,
    Tooltip = '提升移动速度',
    Callback = function(Value)
        SpeedBoost.Enabled = Value
        setupSpeedBoost()
    end
})

-- 添加速度滑块
LeftGroupBox:AddSlider('SpeedValue', {
    Text = '速度值',
    Default = 18,
    Min = 18,
    Max = 22,  -- 默认最大22，速度绕过开启时会改为32
    Rounding = 0,
    Callback = function(Value)
        SpeedBoost.TargetSpeed = Value
        -- 如果速度提升已开启，立即应用新速度
        if SpeedBoost.Enabled and game:GetService("Players").LocalPlayer.Character then
            local humanoid = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                -- 应用速度，但不超过当前最大速度
                local actualSpeed = math.min(Value, SpeedBoost.MaxSpeed)
                humanoid.WalkSpeed = actualSpeed
            end
        end
    end
})

-- 速度绕过功能
local SpeedBypass = {
    Enabled = false,
    BypassActive = false,
    BypassDelay = 0.23,
    MinBypassDelay = 0.21,
    MaxBypassDelay = 0.28,
    ReturnDelay = 0.28,
    DetectionDistance = 0.7,
    CollisionClones = {},
    MasslessLoopThread = nil,
    HorizontalDirs = {
        Vector3.new(1, 0, 0),
        Vector3.new(-1, 0, 0),
        Vector3.new(0, 0, 1),
        Vector3.new(0, 0, -1),
    }
}

-- 速度绕过功能实现
function SpeedBypass:ClearCollisionClones()
    if self.MasslessLoopThread then
        self.MasslessLoopThread = nil
    end
    for i = 1, #self.CollisionClones do
        local part = self.CollisionClones[i]
        if part and part.Parent then
            pcall(function() part.Massless = true end)
            part:Destroy()
        end
    end
    table.clear(self.CollisionClones)
end

function SpeedBypass:StartWallBypass()
    local character = game:GetService("Players").LocalPlayer.Character or game:GetService("Players").LocalPlayer.CharacterAdded:Wait()
    local rootPart = character:WaitForChild("HumanoidRootPart")
    local originalCollisionPart = character:FindFirstChild("Collision")
    if not originalCollisionPart then
        warn("速度旁路：未找到'碰撞'部件")
        return
    end

    for i = 1, 5 do
        local clone = originalCollisionPart:Clone()
        clone.Name = "CollisionClone" .. i
        clone.CanCollide = false
        clone.Massless = true
        clone.Parent = character
        if clone:FindFirstChild("CollisionCrouch") then
            clone.CollisionCrouch:Destroy()
        end
        self.CollisionClones[#self.CollisionClones + 1] = clone
    end

    local rayParams = RaycastParams.new()
    rayParams.FilterType = Enum.RaycastFilterType.Blacklist

    self.MasslessLoopThread = task.spawn(function()
        local toggling = false
        while self.BypassActive do
            if not rootPart or not rootPart.Parent then
                break
            end

            if rootPart.Anchored then
                toggling = false
                for i = 1, #self.CollisionClones do
                    local c = self.CollisionClones[i]
                    if c and c.Parent then
                        pcall(function() c.Massless = true end)
                    end
                end
                repeat task.wait() until not rootPart.Anchored
                task.wait(self.ReturnDelay)
            end

            rayParams.FilterDescendantsInstances = {character}
            local hit = false
            local rpPos = rootPart.Position
            for _, dir in ipairs(self.HorizontalDirs) do
                if game:GetService("Workspace"):Raycast(rpPos, dir.Unit * self.DetectionDistance, rayParams) then
                    hit = true
                    break
                end
            end

            if hit then
                toggling = false
                for i = 1, #self.CollisionClones do
                    local c = self.CollisionClones[i]
                    if c and c.Parent then
                        pcall(function() c.Massless = true end)
                    end
                end
                task.wait(self.BypassDelay)
            else
                if not toggling then
                    toggling = true
                    task.wait(self.ReturnDelay)
                end
                if not self.BypassActive then break end
                for _, state in ipairs({false, true}) do
                    if not self.BypassActive then break end
                    if rootPart and rootPart.Parent then
                        if rootPart.Anchored then
                            toggling = false
                            break
                        end
                        rayParams.FilterDescendantsInstances = {character}
                        local hit2 = false
                        local pos2 = rootPart.Position
                        for _, dir2 in ipairs(self.HorizontalDirs) do
                            if game:GetService("Workspace"):Raycast(pos2, dir2.Unit * self.DetectionDistance, rayParams) then
                                hit2 = true
                                break
                            end
                        end
                        if hit2 then
                            toggling = false
                            for i = 1, #self.CollisionClones do
                                local c2 = self.CollisionClones[i]
                                if c2 and c2.Parent then
                                    pcall(function() c2.Massless = true end)
                                end
                            end
                            break
                        end
                    end
                    for i = 1, #self.CollisionClones do
                        local c = self.CollisionClones[i]
                        if c and c.Parent then
                            pcall(function() c.Massless = state end)
                        end
                    end
                    task.wait(self.BypassDelay)
                end
            end
        end
        self:ClearCollisionClones()
    end)
end

function SpeedBypass:SetSpeedBypassState(on)
    self.BypassActive = false
    self:ClearCollisionClones()
    self.BypassActive = on
    if on then
        self:StartWallBypass()
    end
end

function SpeedBypass:ToggleBypass(value)
    self.Enabled = value
    self:SetSpeedBypassState(value)
    
    -- 更新速度提升的最大速度
    if value then
        SpeedBoost.MaxSpeed = 32  -- 开启速度绕过时，最大速度为32
        Library:Notify("速度绕过已启用，速度上限提升至32", 3)
    else
        SpeedBoost.MaxSpeed = 22  -- 关闭速度绕过时，最大速度为22
        Library:Notify("速度绕过已禁用，速度上限恢复至22", 3)
    end
    
    -- 如果速度提升已开启，立即应用新的速度限制
    if SpeedBoost.Enabled and game:GetService("Players").LocalPlayer.Character then
        local humanoid = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            -- 应用速度，但不超过当前最大速度
            local actualSpeed = math.min(SpeedBoost.TargetSpeed, SpeedBoost.MaxSpeed)
            humanoid.WalkSpeed = actualSpeed
        end
    end
end

-- 玩家重生时重新启动速度绕过
game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function()
    SpeedBypass:ClearCollisionClones()
    if SpeedBypass.Enabled then
        SpeedBypass:SetSpeedBypassState(true)
    end
end)

-- 在作弊标签页中添加速度绕过控件
local SpeedBypassGroup = Tabs.Cheats:AddRightGroupbox('速度绕过')
SpeedBypassGroup:AddToggle('SpeedBypassToggle', {
    Text = '速度绕过',
    Default = false,
    Tooltip = '启用速度绕过功能，允许更高的移动速度',
    Callback = function(Value)
        SpeedBypass:ToggleBypass(Value)
    end
})

SpeedBypassGroup:AddSlider('BypassDelaySlider', {
    Text = '绕过延迟',
    Default = 0.23,
    Min = 0.21,
    Max = 0.28,
    Rounding = 2,
    Callback = function(Value)
        SpeedBypass.BypassDelay = Value
        -- 如果速度绕过已启用，重新启动以应用新的延迟设置
        if SpeedBypass.Enabled then
            SpeedBypass:SetSpeedBypassState(false)
            SpeedBypass:SetSpeedBypassState(true)
        end
    end
})

-- 实体通知系统
local EntityNotification = {
    Enabled = false,
    Tracked = {},
    Connections = {}
}

-- 中文映射
local CN = {
    RushMoving       = {"Rush", "快找柜子躲藏！"},
    AmbushMoving     = {"Ambush", "反复躲柜！"},
    A60              = {"A-60", "立刻躲藏！十字架有效"},
    A120             = {"A-120", "找柜子躲藏！十字架无效"},
    JeffTheKiller    = {"Jeff", "保持距离，不要直视"},
    SeekMoving       = {"Seek", "快跑！十字架无效"},
    SeekMovingNewClone={"Seek", "快跑！十字架无效"},
    BackdoorRush     = {"Blitz", "快躲藏！十字架有效"},
    GlitchRush       = {"GlitchRush", "快躲藏！十字架有效"},
    GlitchAmbush     = {"GlitchAmbush", "快躲藏！十字架有效"},
    GiggleCeiling    = {"Giggle", "远离天花板"},
    Eyes             = {"Eyes", "别看它！十字架有效"},
    BackdoorLookman  = {"Lookman", "别看它！十字架有效"},
    Screech          = {"Screech", "快速环顾四周"},
    GlitchedScreech  = {"GlitchScreech", "快速环顾四周"},
}

-- 实体通知函数
local function notifyEntity(model)
    local info = CN[model.Name]
    if not info then return end
    Library:Notify(info[1], info[2], 3)
end

-- 实体检测函数
local function onDescendantAdded(inst)
    if inst:IsA("Model") and CN[inst.Name] and not EntityNotification.Tracked[inst] then
        EntityNotification.Tracked[inst] = true
        if EntityNotification.Enabled then
            notifyEntity(inst)
        end
    end
end

local function onDescendantRemoving(inst)
    if EntityNotification.Tracked[inst] then 
        EntityNotification.Tracked[inst] = nil 
    end
end

-- 初始化实体通知系统
local function setupEntityNotification()
    -- 清理现有连接
    for _, conn in pairs(EntityNotification.Connections) do
        conn:Disconnect()
    end
    EntityNotification.Connections = {}
    EntityNotification.Tracked = {}
    
    if EntityNotification.Enabled then
        -- 初始扫描
        for _, inst in ipairs(workspace:GetDescendants()) do
            onDescendantAdded(inst)
        end
        
        -- 持续监听
        EntityNotification.Connections.Added = workspace.DescendantAdded:Connect(onDescendantAdded)
        EntityNotification.Connections.Removed = workspace.DescendantRemoving:Connect(onDescendantRemoving)
        
        Library:Notify("实体通知已启用", 3)
    else
        Library:Notify("实体通知已禁用", 3)
    end
end

-- 在楼层功能标签页中添加实体通知控件
local EntityNotifyGroup = Tabs.Floors:AddRightGroupbox('实体通知')
EntityNotifyGroup:AddToggle('EntityNotificationToggle', {
    Text = '实体通知',
    Default = false,
    Tooltip = '启用实体出现时的通知功能',
    Callback = function(Value)
        EntityNotification.Enabled = Value
        setupEntityNotification()
    end
})

-- 防怪功能与强制跳跃系统
local AntiCheat = {
    Settings = {
        AntiScreech = true,
        AutoClutchHeart = true,
        AntiHalt = true,
        AntiEyes = true,
        AntiEggGloom = true,
        AutoUseCrouch = true,
        ForceJump = true,
        Fullbright = false,
        NoFog = false
    },
    Connections = {},
    OriginalAtmospheres = {},
    OriginalBrightness = {
        Brightness = nil,
        ClockTime = nil,
        FogEnd = nil,
        GlobalShadows = nil,
        OutdoorAmbient = nil,
        FogStart = nil
    }
}

-- Hook metamethod 用于拦截游戏事件
local oldNamecall
oldNamecall = hookmetamethod(game, "__namecall", function(self, ...)
    local args = {...}
    local method = getnamecallmethod()
    
    -- 防 Screech
    if tostring(self) == "Screech" and method == "FireServer" and AntiCheat.Settings.AntiScreech then
        args[1] = true
        return oldNamecall(self, unpack(args))
    end
    
    -- 自动 Clutch Heart
    if tostring(self) == "ClutchHeartbeat" and method == "FireServer" and AntiCheat.Settings.AutoClutchHeart then
        args[2] = true
        return oldNamecall(self, unpack(args))
    end
    
    -- 自动使用蹲伏
    if self.Name == "Crouch" and method == "FireServer" and AntiCheat.Settings.AutoUseCrouch then
        args[1] = true
        return oldNamecall(self, unpack(args))
    end
    
    return oldNamecall(self, ...)
end)

-- 防 Screech (销毁模型)
AntiCheat.Connections.Screech = workspace.DescendantAdded:Connect(function(v)
    if v:IsA("Model") and v.Name == "Screech" and AntiCheat.Settings.AntiScreech then
        v:Destroy()
    end
end)

-- 防 Halt
local function SetupAntiHalt()
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local EntityModules = ReplicatedStorage:FindFirstChild("ModulesClient") and ReplicatedStorage.ModulesClient:FindFirstChild("EntityModules")
    if EntityModules then
        if AntiCheat.Settings.AntiHalt then
            local HaltShade = EntityModules:FindFirstChild("Shade") or EntityModules:FindFirstChild("_Shade")
            if HaltShade then
                HaltShade.Name = "_Shade"
            end
        else
            local HaltShade = EntityModules:FindFirstChild("_Shade")
            if HaltShade then
                HaltShade.Name = "Shade"
            end
        end
    end
end

-- 防 Eyes/Lookman
local function SetupAntiEyes()
    if AntiCheat.Settings.AntiEyes then
        AntiCheat.Connections.AntiEyes = game:GetService("RunService").Heartbeat:Connect(function()
            if workspace:FindFirstChild("Eyes") or workspace:FindFirstChild("BackdoorLookman") then
                local ReplicatedStorage = game:GetService("ReplicatedStorage")
                if ReplicatedStorage:FindFirstChild("RemotesFolder") then
                    ReplicatedStorage.RemotesFolder.MotorReplication:FireServer(-649)
                end
            end
        end)
    else
        if AntiCheat.Connections.AntiEyes then
            AntiCheat.Connections.AntiEyes:Disconnect()
            AntiCheat.Connections.AntiEyes = nil
        end
    end
end

-- 防 Egg Gloom (仅 Mines)
local function SetupAntiEggGloom()
    if not ESP.GameData.IsMines then return end
    
    if AntiCheat.Settings.AntiEggGloom then
        AntiCheat.Connections.AntiEggGloom = game:GetService("RunService").Heartbeat:Connect(function()
            if workspace:FindFirstChild("CurrentRooms") then
                for _, room in pairs(workspace.CurrentRooms:GetChildren()) do
                    if room:IsA("Model") then
                        for _, object in pairs(room:GetChildren()) do
                            if object.Name:find("GloomPile") and object:FindFirstChild("GloomEgg") and object.GloomEgg:FindFirstChild("Egg") then
                                object.GloomEgg.Egg.CanTouch = false
                            end
                        end
                    end
                end
            end
        end)
    else
        if AntiCheat.Connections.AntiEggGloom then
            AntiCheat.Connections.AntiEggGloom:Disconnect()
            AntiCheat.Connections.AntiEggGloom = nil
        end
    end
end

-- 强制跳跃功能
local function SetupForceJump()
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    
    if AntiCheat.Settings.ForceJump then
        AntiCheat.Connections.ForceJump = game:GetService("RunService").Heartbeat:Connect(function()
            if LocalPlayer.Character and LocalPlayer.Character:GetAttribute("CanJump") then
                LocalPlayer.Character:SetAttribute("CanJump", true)
            end
        end)
    else
        if AntiCheat.Connections.ForceJump then
            AntiCheat.Connections.ForceJump:Disconnect()
            AntiCheat.Connections.ForceJump = nil
            
            if LocalPlayer.Character and LocalPlayer.Character:GetAttribute("CanJump") then
                LocalPlayer.Character:SetAttribute("CanJump", false)
            end
        end
    end
end

-- 高亮功能 (Fullbright)
local function SetupFullbright()
    local Lighting = game:GetService("Lighting")
    
    if AntiCheat.Settings.Fullbright then
        -- 保存原始设置
        if not AntiCheat.OriginalBrightness.Brightness then
            AntiCheat.OriginalBrightness.Brightness = Lighting.Brightness
            AntiCheat.OriginalBrightness.ClockTime = Lighting.ClockTime
            AntiCheat.OriginalBrightness.FogEnd = Lighting.FogEnd
            AntiCheat.OriginalBrightness.GlobalShadows = Lighting.GlobalShadows
            AntiCheat.OriginalBrightness.OutdoorAmbient = Lighting.OutdoorAmbient
            AntiCheat.OriginalBrightness.FogStart = Lighting.FogStart
        end
        
        AntiCheat.Connections.Fullbright = game:GetService("RunService").Heartbeat:Connect(function()
            Lighting.Brightness = 2
            Lighting.ClockTime = 14
            Lighting.FogEnd = 100000
            Lighting.GlobalShadows = false
            Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
        end)
    else
        if AntiCheat.Connections.Fullbright then
            AntiCheat.Connections.Fullbright:Disconnect()
            AntiCheat.Connections.Fullbright = nil
            
            -- 恢复原始设置
            if AntiCheat.OriginalBrightness.Brightness then
                Lighting.Brightness = AntiCheat.OriginalBrightness.Brightness
                Lighting.ClockTime = AntiCheat.OriginalBrightness.ClockTime
                Lighting.FogEnd = AntiCheat.OriginalBrightness.FogEnd
                Lighting.GlobalShadows = AntiCheat.OriginalBrightness.GlobalShadows
                Lighting.OutdoorAmbient = AntiCheat.OriginalBrightness.OutdoorAmbient
                Lighting.FogStart = AntiCheat.OriginalBrightness.FogStart
            end
        end
    end
end

-- 移除迷雾功能 (No Fog)
local function SetupNoFog()
    local Lighting = game:GetService("Lighting")
    
    if AntiCheat.Settings.NoFog then
        -- 保存原始大气设置
        if next(AntiCheat.OriginalAtmospheres) == nil then
            for _, atmosphere in pairs(Lighting:GetChildren()) do
                if atmosphere:IsA("Atmosphere") then
                    AntiCheat.OriginalAtmospheres[atmosphere] = {
                        Density = atmosphere.Density,
                        Haze = atmosphere.Haze
                    }
                    end
                end
            end
        
        AntiCheat.Connections.NoFog = game:GetService("RunService").Heartbeat:Connect(function()
            Lighting.FogStart = 100000
            Lighting.FogEnd = 200000
            
            for _, atmosphere in pairs(Lighting:GetChildren()) do
                if atmosphere:IsA("Atmosphere") then
                    atmosphere.Density = 0
                    atmosphere.Haze = 0
                end
            end
        end)
    else
        if AntiCheat.Connections.NoFog then
            AntiCheat.Connections.NoFog:Disconnect()
            AntiCheat.Connections.NoFog = nil
            
            -- 恢复原始设置
            Lighting.FogStart = 0
            Lighting.FogEnd = 1000
            
            for atmosphere, originalValues in pairs(AntiCheat.OriginalAtmospheres) do
                if atmosphere.Parent then -- 确保大气对象仍然存在
                    atmosphere.Density = originalValues.Density
                    atmosphere.Haze = originalValues.Haze
                end
            end
        end
    end
end

-- 初始化所有防怪功能
local function InitializeAntiFeatures()
    SetupAntiHalt()
    SetupAntiEyes()
    SetupAntiEggGloom()
    SetupForceJump()
    SetupFullbright()
    SetupNoFog()
end

-- 清理函数
local function CleanupAntiFeatures()
    -- 断开所有连接
    for _, connection in pairs(AntiCheat.Connections) do
        connection:Disconnect()
    end
    
    -- 恢复 Halt 模块名称
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local EntityModules = ReplicatedStorage:FindFirstChild("ModulesClient") and ReplicatedStorage.ModulesClient:FindFirstChild("EntityModules")
    if EntityModules then
        local HaltShade = EntityModules:FindFirstChild("_Shade")
        if HaltShade then
            HaltShade.Name = "Shade"
        end
    end
    
    -- 恢复跳跃属性
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    if LocalPlayer.Character and LocalPlayer.Character:GetAttribute("CanJump") then
        LocalPlayer.Character:SetAttribute("CanJump", false)
    end
    
    -- 恢复光照设置
    local Lighting = game:GetService("Lighting")
    if AntiCheat.OriginalBrightness.Brightness then
        Lighting.Brightness = AntiCheat.OriginalBrightness.Brightness
        Lighting.ClockTime = AntiCheat.OriginalBrightness.ClockTime
        Lighting.FogEnd = AntiCheat.OriginalBrightness.FogEnd
        Lighting.GlobalShadows = AntiCheat.OriginalBrightness.GlobalShadows
        Lighting.OutdoorAmbient = AntiCheat.OriginalBrightness.OutdoorAmbient
        Lighting.FogStart = AntiCheat.OriginalBrightness.FogStart
    end
    
    -- 恢复大气设置
    for atmosphere, originalValues in pairs(AntiCheat.OriginalAtmospheres) do
        if atmosphere.Parent then
            atmosphere.Density = originalValues.Density
            atmosphere.Haze = originalValues.Haze
        end
    end
    
    -- 清空表格
    AntiCheat.Connections = {}
    AntiCheat.OriginalAtmospheres = {}
end

-- 在外挂功能标签页中添加控件
local LeftGroupBoxCheats = Tabs.Cheats:AddLeftGroupbox('防怪功能')
LeftGroupBoxCheats:AddToggle('AntiScreech', {
    Text = '防Screech',
    Default = AntiCheat.Settings.AntiScreech,
    Tooltip = '防止Screech攻击',
    Callback = function(Value)
        AntiCheat.Settings.AntiScreech = Value
        CleanupAntiFeatures()
        InitializeAntiFeatures()
    end
})

LeftGroupBoxCheats:AddToggle('AutoClutchHeart', {
    Text = '自动Clutch Heart',
    Default = AntiCheat.Settings.AutoClutchHeart,
    Tooltip = '自动使用Clutch Heart',
    Callback = function(Value)
        AntiCheat.Settings.AutoClutchHeart = Value
        CleanupAntiFeatures()
        InitializeAntiFeatures()
    end
})

LeftGroupBoxCheats:AddToggle('AntiHalt', {
    Text = '防Halt',
    Default = AntiCheat.Settings.AntiHalt,
    Tooltip = '防止Halt攻击',
    Callback = function(Value)
        AntiCheat.Settings.AntiHalt = Value
        CleanupAntiFeatures()
        InitializeAntiFeatures()
    end
})

LeftGroupBoxCheats:AddToggle('AntiEyes', {
    Text = '防Eyes/Lookman',
    Default = AntiCheat.Settings.AntiEyes,
    Tooltip = '防止Eyes和Lookman攻击',
    Callback = function(Value)
        AntiCheat.Settings.AntiEyes = Value
        CleanupAntiFeatures()
        InitializeAntiFeatures()
    end
})

LeftGroupBoxCheats:AddToggle('AntiEggGloom', {
    Text = '防Egg Gloom',
    Default = AntiCheat.Settings.AntiEggGloom,
    Tooltip = '防止Egg Gloom攻击(仅Mines)',
    Callback = function(Value)
        AntiCheat.Settings.AntiEggGloom = Value
        CleanupAntiFeatures()
        InitializeAntiFeatures()
    end
})

LeftGroupBoxCheats:AddToggle('AutoUseCrouch', {
    Text = '自动蹲伏',
    Default = AntiCheat.Settings.AutoUseCrouch,
    Tooltip = '自动使用蹲伏',
    Callback = function(Value)
        AntiCheat.Settings.AutoUseCrouch = Value
        CleanupAntiFeatures()
        InitializeAntiFeatures()
    end
})

LeftGroupBoxCheats:AddToggle('ForceJump', {
    Text = '强制跳跃',
    Default = AntiCheat.Settings.ForceJump,
    Tooltip = '强制允许跳跃',
    Callback = function(Value)
        AntiCheat.Settings.ForceJump = Value
        CleanupAntiFeatures()
        InitializeAntiFeatures()
    end
})

local RightGroupBoxCheats = Tabs.Cheats:AddRightGroupbox('视觉功能')
RightGroupBoxCheats:AddToggle('Fullbright', {
    Text = '高亮(Fullbright)',
    Default = AntiCheat.Settings.Fullbright,
    Tooltip = '提高场景亮度',
    Callback = function(Value)
        AntiCheat.Settings.Fullbright = Value
        CleanupAntiFeatures()
        InitializeAntiFeatures()
    end
})

RightGroupBoxCheats:AddToggle('NoFog', {
    Text = '移除迷雾(No Fog)',
    Default = AntiCheat.Settings.NoFog,
    Tooltip = '移除场景中的迷雾效果',
    Callback = function(Value)
        AntiCheat.Settings.NoFog = Value
        CleanupAntiFeatures()
        InitializeAntiFeatures()
    end
})

-- 添加控制按钮
local ControlGroupBoxCheats = Tabs.Cheats:AddLeftGroupbox('控制')
ControlGroupBoxCheats:AddButton('刷新防怪功能', function()
    CleanupAntiFeatures()
    InitializeAntiFeatures()
    Library:Notify("防怪功能已刷新")
end)

ControlGroupBoxCheats:AddButton('关闭所有防怪功能', function()
    CleanupAntiFeatures()
    Library:Notify("所有防怪功能已关闭")
end)

-- ESP 系统 (基于用户提供的代码)
local ESP = {
    Settings = {
        -- 通用设置
        Gui = true,
        Highlight = true,
        Name = true,
        Distance = true,
        Health = true,
        GuiTextColor = Color3.new(1, 1, 1),
        ColorLight = Color3.new(1, 1, 1),
        GuiTextSize = 15,
        
        -- 特定 ESP 开关
        Key = true,
        Door = true,
        TimeLever = true,
        Book = true,
        Breaker = true,
        Item = true,
        Entity = true,
        Hiding = true,
        Player = true
    },
    
    -- 实体名称映射
    EntityNames = {
        ["FigureRig"] = "Figure",
        ["SallyMoving"] = "Window",
        ["RushMoving"] = "Rush",
        ["Eyes"] = "Eyes",
        ["Groundskeeper"] = "Skeeper",
        ["BackdoorLookman"] = "Lookman",
        ["BackdoorRush"] = "Blitz",
        ["MandrakeLive"] = "Mandrake",
        ["GloomPile"] = "Egg",
        ["Snare"] = "Snare",
        ["GrumbleRig"] = "Grumble",
        ["GiggleCeiling"] = "Giggle",
        ["AmbushMoving"] = "Ambush"
    },
    
    -- 存储所有需要 ESP 的对象
    Objects = {
        Keys = {},
        Doors = {},
        TimeLevers = {},
        Books = {},
        Breakers = {},
        Items = {},
        Entities = {},
        HidingSpots = {},
        Players = {}
    },
    
    -- 连接器
    Connections = {},
    
    -- 游戏数据
    GameData = {
        Floor = nil,
        IsMines = false,
        IsHotel = false,
        IsBackdoor = false,
        IsGarden = false
    }
}

-- 初始化游戏数据
local function InitializeGameData()
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    if ReplicatedStorage:FindFirstChild("GameData") then
        local gameData = ReplicatedStorage.GameData
        if gameData:FindFirstChild("Floor") then
            ESP.GameData.Floor = gameData.Floor.Value
            ESP.GameData.IsMines = ESP.GameData.Floor == "Mines"
            ESP.GameData.IsHotel = ESP.GameData.Floor == "Hotel"
            ESP.GameData.IsBackdoor = ESP.GameData.Floor == "Backdoor"
            ESP.GameData.IsGarden = ESP.GameData.Floor == "Garden"
        end
    end
end

-- 距离计算函数
local function Distance(pos)
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        return (LocalPlayer.Character.HumanoidRootPart.Position - pos).Magnitude
    end
    return math.huge
end

-- 创建 ESP 高亮和标签
local function CreateEsp(object, displayName, position, isPlayer)
    -- 高亮
    if ESP.Settings.Highlight and not object:FindFirstChild("Esp_Highlight") then
        local Highlight = Instance.new("Highlight")
        Highlight.Name = "Esp_Highlight"
        Highlight.FillColor = ESP.Settings.ColorLight
        Highlight.OutlineColor = ESP.Settings.ColorLight
        Highlight.FillTransparency = 0.5
        Highlight.OutlineTransparency = 0
        Highlight.Adornee = object
        Highlight.Parent = object
    end
    
    -- GUI 标签
    if ESP.Settings.Gui and not object:FindFirstChild("Esp_Gui") then
        local GuiEsp = Instance.new("BillboardGui")
        GuiEsp.Adornee = isPlayer and object:FindFirstChild("Head") or object
        GuiEsp.Name = "Esp_Gui"
        GuiEsp.Size = UDim2.new(0, 100, 0, 150)
        GuiEsp.AlwaysOnTop = true
        
        if isPlayer then
            GuiEsp.StudsOffset = Vector3.new(0, 3, 0)
        end
        
        local GuiEspText = Instance.new("TextLabel")
        GuiEspText.BackgroundTransparency = 1
        GuiEspText.Font = Enum.Font.Code
        GuiEspText.Size = UDim2.new(0, 100, 0, 100)
        GuiEspText.TextSize = ESP.Settings.GuiTextSize
        GuiEspText.TextColor3 = ESP.Settings.GuiTextColor
        GuiEspText.TextStrokeTransparency = 0.5
        
        local UIStroke = Instance.new("UIStroke")
        UIStroke.Color = Color3.new(0, 0, 0)
        UIStroke.Thickness = 1.5
        UIStroke.Parent = GuiEspText
        
        GuiEspText.Parent = GuiEsp
        GuiEsp.Parent = object
    end
    
    -- 更新文本
    if object:FindFirstChild("Esp_Gui") and object.Esp_Gui:FindFirstChild("TextLabel") then
        local text = ""
        
        if ESP.Settings.Name then
            text = displayName
        end
        
        if ESP.Settings.Distance then
            text = text .. (text ~= "" and "\n" or "") .. "距离: " .. string.format("%.0f", Distance(position)) .. "米"
        end
        
        if isPlayer and ESP.Settings.Health and object:FindFirstChild("Humanoid") then
            text = text .. (text ~= "" and "\n" or "") .. "生命: " .. (object.Humanoid.Health <= 0 and "死亡" or string.format("%.0f", object.Humanoid.Health))
        end
        
        object.Esp_Gui.TextLabel.Text = text
    end
end

-- 移除 ESP
local function RemoveEsp(object)
    if object:FindFirstChild("Esp_Highlight") then
        object.Esp_Highlight:Destroy()
    end
    if object:FindFirstChild("Esp_Gui") then
        object.Esp_Gui:Destroy()
    end
end

-- 钥匙/杠杆/保险丝 ESP
local function SetupKeyEsp()
    local function CheckKey(object)
        if not table.find(ESP.Objects.Keys, object) and 
           ((object.Name:find("Key") or object.Name:find("FuseObtain")) and object:FindFirstChild("Hitbox")) or 
           (object.Name == "LeverForGate" and object.PrimaryPart) then
            table.insert(ESP.Objects.Keys, object)
        end
    end

    for _, object in ipairs(workspace:GetDescendants()) do
        CheckKey(object)
    end

    ESP.Connections.KeyAdded = workspace.DescendantAdded:Connect(function(object)
        CheckKey(object)
    end)

    ESP.Connections.KeyRemoved = workspace.DescendantRemoving:Connect(function(object)
        for i = #ESP.Objects.Keys, 1, -1 do
            if ESP.Objects.Keys[i] == object then
                table.remove(ESP.Objects.Keys, i)
                break
            end
        end
    end)
end

-- 门 ESP
local function SetupDoorEsp()
    local function UpdateDoorEsp()
        if workspace:FindFirstChild("CurrentRooms") then
            for _, room in pairs(workspace.CurrentRooms:GetChildren()) do
                if room:IsA("Model") and room:FindFirstChild("Door") and room.Door:FindFirstChild("Door") then
                    local doorNumber = "未知"
                    if room.Door:FindFirstChild("Sign") then
                        if room.Door.Sign:FindFirstChild("Stinker") then
                            doorNumber = room.Door.Sign.Stinker.Text
                        elseif room.Door.Sign:FindFirstChild("SignText") then
                            doorNumber = room.Door.Sign.SignText.Text
                        end
                    end
                    
                    local displayName = "门 " .. doorNumber:gsub("^0+", "") .. 
                                       (room.Door:FindFirstChild("Lock") and " (锁定)" or "")
                    
                    CreateEsp(room, displayName, room.Door.Door.Position, false)
                end
            end
        end
    end

    ESP.Connections.DoorUpdate = game:GetService("RunService").Heartbeat:Connect(function()
        if ESP.Settings.Door then
            UpdateDoorEsp()
        end
    end)
end

-- 计时杠杆 ESP (Backdoor)
local function SetupTimeLeverEsp()
    if not ESP.GameData.IsBackdoor then return end
    
    local function CheckTimeLever(object)
        if not table.find(ESP.Objects.TimeLevers, object) and object.Name == "TimerLever" then
            table.insert(ESP.Objects.TimeLevers, object)
        end
    end

    for _, object in ipairs(workspace:GetDescendants()) do
        CheckTimeLever(object)
    end

    ESP.Connections.TimeLeverAdded = workspace.DescendantAdded:Connect(function(object)
        CheckTimeLever(object)
    end)

    ESP.Connections.TimeLeverRemoved = workspace.DescendantRemoving:Connect(function(object)
        for i = #ESP.Objects.TimeLevers, 1, -1 do
            if ESP.Objects.TimeLevers[i] == object then
                table.remove(ESP.Objects.TimeLevers, i)
                break
            end
        end
    end)
end

-- 书本 ESP (Hotel)
local function SetupBookEsp()
    if not ESP.GameData.IsHotel then return end
    
    local function CheckBook(object)
        if not table.find(ESP.Objects.Books, object) and object.Name == "LiveHintBook" then
            table.insert(ESP.Objects.Books, object)
        end
    end

    for _, object in ipairs(workspace:GetDescendants()) do
        CheckBook(object)
    end

    ESP.Connections.BookAdded = workspace.DescendantAdded:Connect(function(object)
        CheckBook(object)
    end)

    ESP.Connections.BookRemoved = workspace.DescendantRemoving:Connect(function(object)
        for i = #ESP.Objects.Books, 1, -1 do
            if ESP.Objects.Books[i] == object then
                table.remove(ESP.Objects.Books, i)
                break
            end
        end
    end)
end

-- 断路器 ESP (Hotel)
local function SetupBreakerEsp()
    if not ESP.GameData.IsHotel then return end
    
    local function CheckBreaker(object)
        if not table.find(ESP.Objects.Breakers, object) and object.Name == "LiveBreakerPolePickup" then
            table.insert(ESP.Objects.Breakers, object)
        end
    end

    for _, object in ipairs(workspace:GetDescendants()) do
        CheckBreaker(object)
    end

    ESP.Connections.BreakerAdded = workspace.DescendantAdded:Connect(function(object)
        CheckBreaker(object)
    end)

    ESP.Connections.BreakerRemoved = workspace.DescendantRemoving:Connect(function(object)
        for i = #ESP.Objects.Breakers, 1, -1 do
            if ESP.Objects.Breakers[i] == object then
                table.remove(ESP.Objects.Breakers, i)
                break
            end
        end
    end)
end

-- 物品 ESP
local function SetupItemEsp()
    local function CheckItem(object)
        if not table.find(ESP.Objects.Items, object) and object.Name == "Handle" and object.Parent:FindFirstChildOfClass("ProximityPrompt") then
            table.insert(ESP.Objects.Items, object)
        end
    end

    for _, object in ipairs(workspace:GetDescendants()) do
        CheckItem(object)
    end

    ESP.Connections.ItemAdded = workspace.DescendantAdded:Connect(function(object)
        CheckItem(object)
    end)

    ESP.Connections.ItemRemoved = workspace.DescendantRemoving:Connect(function(object)
        for i = #ESP.Objects.Items, 1, -1 do
            if ESP.Objects.Items[i] == object then
                table.remove(ESP.Objects.Items, i)
                break
            end
        end
    end)
end

-- 实体 ESP
local function SetupEntityEsp()
    local function CheckEntity(object)
        for entityName in pairs(ESP.EntityNames) do
            if object:IsA("Model") and (object.Name == entityName) then
                if object.Name == "Snare" and object.Parent and object.Parent:IsA("Model") and object.Parent.Name == "Snare" then
                    return
                end            
                if not table.find(ESP.Objects.Entities, object) then
                    table.insert(ESP.Objects.Entities, object)
                end
            end
        end
    end

    for _, object in ipairs(workspace:GetDescendants()) do
        CheckEntity(object)
    end

    ESP.Connections.EntityAdded = workspace.DescendantAdded:Connect(function(object)
        CheckEntity(object)
    end)

    ESP.Connections.EntityRemoved = workspace.DescendantRemoving:Connect(function(object)
        for i = #ESP.Objects.Entities, 1, -1 do
            if ESP.Objects.Entities[i] == object then
                table.remove(ESP.Objects.Entities, i)
                break
            end
        end
    end)
end

-- 藏身点 ESP
local function SetupHidingEsp()
    local function CheckHiding(object)
        local hidingNames = {"Bed", "Wardrobe", "Backdoor_Wardrobe", "Locker_Large", "Rooms_Locker"}
        if not table.find(ESP.Objects.HidingSpots, object) and table.find(hidingNames, object.Name) then
            table.insert(ESP.Objects.HidingSpots, object)
        end
    end

    for _, object in ipairs(workspace:GetDescendants()) do
        CheckHiding(object)
    end

    ESP.Connections.HidingAdded = workspace.DescendantAdded:Connect(function(object)
        CheckHiding(object)
    end)

    ESP.Connections.HidingRemoved = workspace.DescendantRemoving:Connect(function(object)
        for i = #ESP.Objects.HidingSpots, 1, -1 do
            if ESP.Objects.HidingSpots[i] == object then
                table.remove(ESP.Objects.HidingSpots, i)
                break
            end
        end
    end)
end

-- 玩家 ESP
local function SetupPlayerEsp()
    local function UpdatePlayerEsp()
        local Players = game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") and 
               player.Character:FindFirstChild("HumanoidRootPart") and player.Character:FindFirstChild("Humanoid") then
                CreateEsp(player.Character, player.Name, player.Character.HumanoidRootPart.Position, true)
            end
        end
    end

    ESP.Connections.PlayerUpdate = game:GetService("RunService").Heartbeat:Connect(function()
        if ESP.Settings.Player then
            UpdatePlayerEsp()
        end
    end)
end

-- 主更新循环
local function MainEspLoop()
    while true do
        -- 钥匙/杠杆/保险丝
        if ESP.Settings.Key then
            for _, key in pairs(ESP.Objects.Keys) do
                if key:IsA("Model") then
                    local position = (key.Name == "LeverForGate" and key.PrimaryPart.Position) or 
                                   ((key.Name:find("Key") or key.Name:find("FuseObtain")) and key.Hitbox.Position)
                    local displayName = (key.Name == "LleverForGate" and "杠杆") or 
                                      (key.Name:find("Key") and "钥匙") or 
                                      (key.Name:find("FuseObtain") and "保险丝")
                    CreateEsp(key, displayName, position, false)
                end
            end
        end

        -- 计时杠杆
        if ESP.Settings.TimeLever and ESP.GameData.IsBackdoor then
            for _, lever in pairs(ESP.Objects.TimeLevers) do
                if lever:IsA("Model") and lever.PrimaryPart then
                    CreateEsp(lever, "计时杠杆", lever.PrimaryPart.Position, false)
                end
            end
        end

        -- 书本
        if ESP.Settings.Book and ESP.GameData.IsHotel then
            for _, book in pairs(ESP.Objects.Books) do
                if book:IsA("Model") and book.PrimaryPart then
                    CreateEsp(book, "书本", book.PrimaryPart.Position, false)
                end
            end
        end

        -- 断路器
        if ESP.Settings.Breaker and ESP.GameData.IsHotel then
            for _, breaker in pairs(ESP.Objects.Breakers) do
                if breaker.Name == "LiveBreakerPolePickup" and breaker:FindFirstChildOfClass("ProximityPrompt") then
                    CreateEsp(breaker, "断路器", breaker.PrimaryPart.Position, false)
                end
            end
        end

        -- 物品
        if ESP.Settings.Item then
            for _, item in pairs(ESP.Objects.Items) do
                if item.Name == "Handle" and item.Parent:FindFirstChildOfClass("ProximityPrompt") then
                    CreateEsp(item.Parent, item.Parent.Name, item.Position, false)
                end
            end
        end

        -- 实体
        if ESP.Settings.Entity then
            for _, entity in pairs(ESP.Objects.Entities) do
                for entityName, displayName in pairs(ESP.EntityNames) do
                    if entity:IsA("Model") and (entity.Name == entityName) and entity.PrimaryPart then
                        CreateEsp(entity, displayName, entity.PrimaryPart.Position, false)
                    end
                end
            end
        end

        -- 藏身点
        if ESP.Settings.Hiding then
            for _, hiding in pairs(ESP.Objects.HidingSpots) do
                if hiding:IsA("Model") and hiding.PrimaryPart then
                    CreateEsp(hiding, hiding.Name, hiding.PrimaryPart.Position, false)
                end
            end
        end

        task.wait(0.1)
    end
end

-- 初始化所有 ESP
local function InitializeESP()
    InitializeGameData()
    SetupKeyEsp()
    SetupDoorEsp()
    SetupTimeLeverEsp()
    SetupBookEsp()
    SetupBreakerEsp()
    SetupItemEsp()
    SetupEntityEsp()
    SetupHidingEsp()
    SetupPlayerEsp()
    
    -- 启动主循环
    task.spawn(MainEspLoop)
end

-- 清理函数
local function CleanupESP()
    -- 断开所有连接
    for _, connection in pairs(ESP.Connections) do
        connection:Disconnect()
    end
    
    -- 清除所有 ESP 对象
    for _, category in pairs(ESP.Objects) do
        for _, object in pairs(category) do
            RemoveEsp(object)
        end
    end
    
    -- 清空表格
    for category in pairs(ESP.Objects) do
        ESP.Objects[category] = {}
    end
    
    -- 清空连接
    ESP.Connections = {}
end

-- 在 ESP 标签页中添加控件
local LeftGroupBoxESP = Tabs.ESP:AddLeftGroupbox('通用设置')
LeftGroupBoxESP:AddToggle('GuiESP', {
    Text = '显示GUI',
    Default = ESP.Settings.Gui,
    Tooltip = '显示ESP GUI标签',
    Callback = function(Value)
        ESP.Settings.Gui = Value
        CleanupESP()
        InitializeESP()
    end
})

LeftGroupBoxESP:AddToggle('HighlightESP', {
    Text = '显示高亮',
    Default = ESP.Settings.Highlight,
    Tooltip = '显示ESP高亮效果',
    Callback = function(Value)
        ESP.Settings.Highlight = Value
        CleanupESP()
        InitializeESP()
    end
})

LeftGroupBoxESP:AddToggle('NameESP', {
    Text = '显示名称',
    Default = ESP.Settings.Name,
    Tooltip = '显示ESP名称',
    Callback = function(Value)
        ESP.Settings.Name = Value
        CleanupESP()
        InitializeESP()
    end
})

LeftGroupBoxESP:AddToggle('DistanceESP', {
    Text = '显示距离',
    Default = ESP.Settings.Distance,
    Tooltip = '显示ESP距离',
    Callback = function(Value)
        ESP.Settings.Distance = Value
        CleanupESP()
        InitializeESP()
    end
})

LeftGroupBoxESP:AddToggle('HealthESP', {
    Text = '显示生命值',
    Default = ESP.Settings.Health,
    Tooltip = '显示玩家生命值',
    Callback = function(Value)
        ESP.Settings.Health = Value
        CleanupESP()
        InitializeESP()
    end
})

LeftGroupBoxESP:AddSlider('GuiTextSize', {
    Text = '文本大小',
    Default = ESP.Settings.GuiTextSize,
    Min = 10,
    Max = 30,
    Rounding = 1,
    Callback = function(Value)
        ESP.Settings.GuiTextSize = Value
        CleanupESP()
        InitializeESP()
    end
})

LeftGroupBoxESP:AddDivider()
LeftGroupBoxESP:AddLabel('颜色设置'):AddColorPicker('GuiTextColor', {
    Default = ESP.Settings.GuiTextColor,
    Title = '文本颜色',
    Callback = function(Value)
        ESP.Settings.GuiTextColor = Value
        CleanupESP()
        InitializeESP()
    end
})

LeftGroupBoxESP:AddColorPicker('HighlightColor', {
    Default = ESP.Settings.ColorLight,
    Title = '高亮颜色',
    Callback = function(Value)
        ESP.Settings.ColorLight = Value
        CleanupESP()
        InitializeESP()
    end
})

local RightGroupBoxESP = Tabs.ESP:AddRightGroupbox('ESP类型')
RightGroupBoxESP:AddToggle('KeyESP', {
    Text = '钥匙/杠杆',
    Default = ESP.Settings.Key,
    Tooltip = '显示钥匙和杠杆ESP',
    Callback = function(Value)
        ESP.Settings.Key = Value
        CleanupESP()
        InitializeESP()
    end
})

RightGroupBoxESP:AddToggle('DoorESP', {
    Text = '门',
    Default = ESP.Settings.Door,
    Tooltip = '显示门ESP',
    Callback = function(Value)
        ESP.Settings.Door = Value
        CleanupESP()
        InitializeESP()
    end
})

RightGroupBoxESP:AddToggle('TimeLeverESP', {
    Text = '计时杠杆',
    Default = ESP.Settings.TimeLever,
    Tooltip = '显示计时杠杆ESP',
    Callback = function(Value)
        ESP.Settings.TimeLever = Value
        CleanupESP()
        InitializeESP()
    end
})

RightGroupBoxESP:AddToggle('BookESP', {
    Text = '书本',
    Default = ESP.Settings.Book,
    Tooltip = '显示书本ESP',
    Callback = function(Value)
        ESP.Settings.Book = Value
        CleanupESP()
        InitializeESP()
    end
})

RightGroupBoxESP:AddToggle('BreakerESP', {
    Text = '断路器',
    Default = ESP.Settings.Breaker,
    Tooltip = '显示断路器ESP',
    Callback = function(Value)
        ESP.Settings.Breaker = Value
        CleanupESP()
        InitializeESP()
    end
})

RightGroupBoxESP:AddToggle('ItemESP', {
    Text = '物品',
    Default = ESP.Settings.Item,
    Tooltip = '显示物品ESP',
    Callback = function(Value)
        ESP.Settings.Item = Value
        CleanupESP()
        InitializeESP()
    end
})

RightGroupBoxESP:AddToggle('EntityESP', {
    Text = '实体',
    Default = ESP.Settings.Entity,
    Tooltip = '显示实体ESP',
    Callback = function(Value)
        ESP.Settings.Entity = Value
        CleanupESP()
        InitializeESP()
    end
})

RightGroupBoxESP:AddToggle('HidingESP', {
    Text = '藏身点',
    Default = ESP.Settings.Hiding,
    Tooltip = '显示藏身点ESP',
    Callback = function(Value)
        ESP.Settings.Hiding = Value
        CleanupESP()
        InitializeESP()
    end
})

RightGroupBoxESP:AddToggle('PlayerESP', {
    Text = '玩家',
    Default = ESP.Settings.Player,
    Tooltip = '显示玩家ESP',
    Callback = function(Value)
        ESP.Settings.Player = Value
        CleanupESP()
        InitializeESP()
    end
})

-- 添加控制按钮
local ControlGroupBox = Tabs.ESP:AddLeftGroupbox('控制')
ControlGroupBox:AddButton('刷新ESP', function()
    CleanupESP()
    InitializeESP()
    Library:Notify("ESP已刷新")
end)

ControlGroupBox:AddButton('清除ESP', function()
    CleanupESP()
    Library:Notify("ESP已清除")
end)

-- 楼层功能标签页
local LeftGroupBoxFloors = Tabs.Floors:AddLeftGroupbox('楼层信息')
LeftGroupBoxFloors:AddLabel('当前楼层: ' .. (ESP.GameData.Floor or "未知"))
LeftGroupBoxFloors:AddLabel('Mines: ' .. tostring(ESP.GameData.IsMines))
LeftGroupBoxFloors:AddLabel('Hotel: ' .. tostring(ESP.GameData.IsHotel))
LeftGroupBoxFloors:AddLabel('Backdoor: ' .. tostring(ESP.GameData.IsBackdoor))
LeftGroupBoxFloors:AddLabel('Garden: ' .. tostring(ESP.GameData.IsGarden))

local RightGroupBoxFloors = Tabs.Floors:AddRightGroupbox('楼层功能')
RightGroupBoxFloors:AddButton('刷新楼层信息', function()
    InitializeGameData()
    LeftGroupBoxFloors:GetChildren()[2]:SetText('当前楼层: ' .. (ESP.GameData.Floor or "未知"))
    LeftGroupBoxFloors:GetChildren()[4]:SetText('Mines: ' .. tostring(ESP.GameData.IsMines))
    LeftGroupBoxFloors:GetChildren()[6]:SetText('Hotel: ' .. tostring(ESP.GameData.IsHotel))
    LeftGroupBoxFloors:GetChildren()[8]:SetText('Backdoor: ' .. tostring(ESP.GameData.IsBackdoor))
    LeftGroupBoxFloors:GetChildren()[10]:SetText('Garden: ' .. tostring(ESP.GameData.IsGarden))
    Library:Notify("楼层信息已刷新")
end)

-- 界面设置
local MenuGroup = Tabs['界面设置']:AddLeftGroupbox('菜单管理')
local ThemeGroup = Tabs['界面设置']:AddRightGroupbox('主题设置')

MenuGroup:AddToggle("KeybindMenuOpen", {
    Default = Library.KeybindFrame.Visible,
    Text = "显示按键绑定菜单",
    Callback = function(value)
        Library.KeybindFrame.Visible = value
    end
})

MenuGroup:AddToggle("ShowCustomCursor", {
    Text = "自定义光标",
    Default = true,
    Callback = function(Value)
    Library.ShowCustomCursor = Value
    end
})

MenuGroup:AddDivider()
MenuGroup:AddLabel("菜单快捷键"):AddKeyPicker("MenuKeybind", {
    Default = "RightShift",
    NoUI = true,
    Text = "菜单切换键"
})

MenuGroup:AddButton("卸载界面", function()
    CleanupESP()
    CleanupAntiFeatures()
    SpeedBypass:ClearCollisionClones()
    -- 清理实体通知连接
    for _, conn in pairs(EntityNotification.Connections) do
        conn:Disconnect()
    end
    Library:Unload()
end)

MenuGroup:AddButton("重置设置", function()
    Library:Notify("设置已重置")
end)

ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({ 'MenuKeybind' })
ThemeManager:SetFolder('StarLight')
SaveManager:SetFolder('StarLight/配置')
SaveManager:BuildConfigSection(Tabs['界面设置'])
ThemeManager:ApplyToTab(Tabs['界面设置'])

Library:SetWatermarkVisibility(true)
local FrameTimer = tick()
local FrameCounter = 0
local FPS = 60
local WatermarkConnection = game:GetService('RunService').RenderStepped:Connect(function()
    FrameCounter = FrameCounter + 1
    if (tick() - FrameTimer) >= 1 then
        FPS = FrameCounter
        FrameTimer = tick()
        FrameCounter = 0
    end
    Library:SetWatermark(('FPS: %s | 延迟: %s 毫秒 | StarLight'):format(
        math.floor(FPS),
        math.floor(game:GetService('Stats').Network.ServerStatsItem['Data Ping']:GetValue())
    ))
end)

Library:OnUnload(function()
    CleanupESP()
    CleanupAntiFeatures()
    SpeedBypass:ClearCollisionClones()
    -- 清理实体通知连接
    for _, conn in pairs(EntityNotification.Connections) do
        conn:Disconnect()
    end
    WatermarkConnection:Disconnect()
    Library.Unloaded = true
end)

Library.ToggleKeybind = Options.MenuKeybind
SaveManager:LoadAutoloadConfig()

-- 初始化系统
task.spawn(function()
    InitializeGameData()
    InitializeESP()
    InitializeAntiFeatures()
    Library:Notify("StarLight 加载成功!", 5)
end)