-- Aurora UI - 现代蓝白主题UI库
-- 设计灵感：玻璃拟态、现代极简、流畅动画
-- 作者：Aurora Design System

local Aurora = {}
Aurora.__index = Aurora

-- 服务引用
local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local TS = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LP = Players.LocalPlayer

-- 工具函数
local function new(class, props)
    local inst = Instance.new(class)
    if props then
        for k, v in pairs(props) do
            inst[k] = v
        end
    end
    return inst
end

local function tween(obj, duration, props, easingStyle, easingDir)
    easingStyle = easingStyle or Enum.EasingStyle.Quint
    easingDir = easingDir or Enum.EasingDirection.Out
    local info = TweenInfo.new(duration, easingStyle, easingDir)
    local tw = TS:Create(obj, info, props)
    tw:Play()
    return tw
end

-- 颜色主题
local Colors = {
    Primary = Color3.fromRGB(59, 130, 246),
    PrimaryLight = Color3.fromRGB(147, 197, 253),
    PrimaryDark = Color3.fromRGB(29, 78, 216),
    Background = Color3.fromRGB(248, 250, 252),
    Surface = Color3.fromRGB(255, 255, 255),
    SurfaceGlass = Color3.fromRGB(255, 255, 255),
    Text = Color3.fromRGB(15, 23, 42),
    TextSecondary = Color3.fromRGB(100, 116, 139),
    Border = Color3.fromRGB(226, 232, 240),
    Shadow = Color3.fromRGB(0, 0, 0),
    Success = Color3.fromRGB(34, 197, 94),
    Warning = Color3.fromRGB(251, 191, 36),
    Error = Color3.fromRGB(239, 68, 68),
}

-- 字体
local Fonts = {
    Regular = Font.fromName("Inter"),
    Medium = Font.fromName("Inter", Enum.FontWeight.Medium),
    Semibold = Font.fromName("Inter", Enum.FontWeight.SemiBold),
}

-- 创建主UI
function Aurora:CreateWindow(options)
    options = options or {}
    local title = options.title or "Aurora UI"
    local size = options.size or Vector2.new(900, 600)
    local keybind = options.keybind or Enum.KeyCode.RightShift
    
    -- 主界面
    local screenGui = new("ScreenGui", {
        Name = "AuroraUI",
        Parent = game:GetService("CoreGui"),
        ResetOnSpawn = false,
        ZIndexBehavior = Enum.ZIndexBehavior.Sibling,
    })
    
    -- 背景模糊效果
    local blur = new("Frame", {
        Parent = screenGui,
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundColor3 = Colors.Shadow,
        BackgroundTransparency = 0.4,
        Visible = false,
    })
    
    local mainFrame = new("Frame", {
        Parent = screenGui,
        Size = UDim2.fromOffset(size.X, size.Y),
        Position = UDim2.fromScale(0.5, 0.5),
        AnchorPoint = Vector2.new(0.5, 0.5),
        BackgroundColor3 = Colors.SurfaceGlass,
        BackgroundTransparency = 0.1,
        Visible = false,
    })
    
    -- 玻璃效果
    local glassEffect = new("UICorner", {
        Parent = mainFrame,
        CornerRadius = UDim.new(0, 20),
    })
    
    -- 主阴影
    local shadow = new("ImageLabel", {
        Parent = mainFrame,
        Size = UDim2.new(1, 32, 1, 32),
        Position = UDim2.fromOffset(-16, -16),
        BackgroundTransparency = 1,
        Image = "rbxassetid://1316045217",
        ImageColor3 = Colors.Shadow,
        ImageTransparency = 0.85,
        ZIndex = -1,
    })
    
    -- 标题栏
    local header = new("Frame", {
        Parent = mainFrame,
        Size = UDim2.new(1, 0, 0, 70),
        Position = UDim2.fromOffset(0, 0),
        BackgroundColor3 = Colors.Surface,
        BackgroundTransparency = 0.5,
    })
    
    local headerCorner = new("UICorner", {
        Parent = header,
        CornerRadius = UDim.new(0, 20),
    })
    
    local titleLabel = new("TextLabel", {
        Parent = header,
        Size = UDim2.new(1, -120, 1, 0),
        Position = UDim2.fromOffset(24, 0),
        BackgroundTransparency = 1,
        Text = title,
        FontFace = Fonts.Semibold,
        TextSize = 20,
        TextColor3 = Colors.Text,
        TextXAlignment = Enum.TextXAlignment.Left,
    })
    
    -- 关闭按钮
    local closeBtn = new("TextButton", {
        Parent = header,
        Size = UDim2.fromOffset(36, 36),
        Position = UDim2.new(1, -48, 0.5, -18),
        BackgroundColor3 = Colors.Error,
        BackgroundTransparency = 0.9,
        Text = "×",
        FontFace = Fonts.Regular,
        TextSize = 24,
        TextColor3 = Color3.new(1, 1, 1),
    })
    
    local closeCorner = new("UICorner", {
        Parent = closeBtn,
        CornerRadius = UDim.new(0, 8),
    })
    
    -- 内容区域
    local content = new("Frame", {
        Parent = mainFrame,
        Size = UDim2.new(1, -32, 1, -102),
        Position = UDim2.fromOffset(16, 86),
        BackgroundColor3 = Colors.Surface,
        BackgroundTransparency = 0.3,
    })
    
    local contentCorner = new("UICorner", {
        Parent = content,
        CornerRadius = UDim.new(0, 16),
    })
    
    -- 侧边栏
    local sidebar = new("Frame", {
        Parent = content,
        Size = UDim2.new(0, 200, 1, 0),
        BackgroundColor3 = Colors.Surface,
        BackgroundTransparency = 0.5,
    })
    
    local sidebarCorner = new("UICorner", {
        Parent = sidebar,
        CornerRadius = UDim.new(0, 16),
    })
    
    local sidebarList = new("UIListLayout", {
        Parent = sidebar,
        SortOrder = Enum.SortOrder.LayoutOrder,
        Padding = UDim.new(0, 8),
    })
    
    local sidebarPadding = new("UIPadding", {
        Parent = sidebar,
        PaddingTop = UDim.new(0, 16),
        PaddingBottom = UDim.new(0, 16),
        PaddingLeft = UDim.new(0, 8),
        PaddingRight = UDim.new(0, 8),
    })
    
    -- 主内容区
    local mainContent = new("Frame", {
        Parent = content,
        Size = UDim2.new(1, -216, 1, 0),
        Position = UDim2.fromOffset(208, 0),
        BackgroundTransparency = 1,
    })
    
    -- 标签页系统
    local tabs = {}
    local currentTab = nil
    
    -- 通知系统
    local notificationArea = new("Frame", {
        Parent = screenGui,
        Size = UDim2.new(0, 350, 1, 0),
        Position = UDim2.new(1, -370, 0, 20),
        BackgroundTransparency = 1,
    })
    
    local notificationList = new("UIListLayout", {
        Parent = notificationArea,
        SortOrder = Enum.SortOrder.LayoutOrder,
        Padding = UDim.new(0, 12),
        HorizontalAlignment = Enum.HorizontalAlignment.Right,
    })
    
    -- 创建通知
    local function createNotification(text, type, duration)
        type = type or "info"
        duration = duration or 3
        
        local colors = {
            info = Colors.Primary,
            success = Colors.Success,
            warning = Colors.Warning,
            error = Colors.Error,
        }
        
        local notification = new("Frame", {
            Parent = notificationArea,
            Size = UDim2.new(0, 0, 0, 0),
            BackgroundColor3 = Colors.Surface,
            BackgroundTransparency = 0.1,
            BorderSizePixel = 0,
        })
        
        local notificationCorner = new("UICorner", {
            Parent = notification,
            CornerRadius = UDim.new(0, 12),
        })
        
        local stroke = new("UIStroke", {
            Parent = notification,
            Color = colors[type],
            Thickness = 2,
            Transparency = 0.8,
        })
        
        local icon = new("TextLabel", {
            Parent = notification,
            Size = UDim2.fromOffset(24, 24),
            Position = UDim2.fromOffset(12, 12),
            BackgroundTransparency = 1,
            Text = type == "success" and "✓" or type == "error" and "✕" or type == "warning" and "⚠" or "ℹ",
            FontFace = Fonts.Medium,
            TextSize = 16,
            TextColor3 = colors[type],
        })
        
        local message = new("TextLabel", {
            Parent = notification,
            Size = UDim2.new(1, -48, 1, 0),
            Position = UDim2.fromOffset(48, 0),
            BackgroundTransparency = 1,
            Text = text,
            FontFace = Fonts.Regular,
            TextSize = 14,
            TextColor3 = Colors.Text,
            TextXAlignment = Enum.TextXAlignment.Left,
            TextWrapped = true,
        })
        
        -- 动画
        notification.Size = UDim2.new(0, 300, 0, 48)
        notification.Position = UDim2.new(1, 320, 0, 0)
        
        tween(notification, 0.5, {
            Position = UDim2.new(1, 0, 0, 0),
        }, Enum.EasingStyle.Back)
        
        task.wait(duration)
        
        tween(notification, 0.3, {
            Position = UDim2.new(1, 320, 0, 0),
            BackgroundTransparency = 1,
        })
        
        task.wait(0.3)
        notification:Destroy()
    end
    
    -- UI切换功能
    local isVisible = false
    local function toggleUI()
        isVisible = not isVisible
        blur.Visible = isVisible
        mainFrame.Visible = isVisible
        
        if isVisible then
            blur.BackgroundTransparency = 1
            mainFrame.Size = UDim2.fromOffset(size.X * 0.8, size.Y * 0.8)
            mainFrame.BackgroundTransparency = 1
            
            tween(blur, 0.3, {BackgroundTransparency = 0.4})
            tween(mainFrame, 0.4, {
                Size = UDim2.fromOffset(size.X, size.Y),
                BackgroundTransparency = 0.1,
            }, Enum.EasingStyle.Back)
        else
            tween(blur, 0.3, {BackgroundTransparency = 1})
            tween(mainFrame, 0.3, {
                Size = UDim2.fromOffset(size.X * 0.8, size.Y * 0.8),
                BackgroundTransparency = 1,
            })
        end
    end
    
    -- 键盘绑定
    UIS.InputBegan:Connect(function(input, gameProcessed)
        if not gameProcessed and input.KeyCode == keybind then
            toggleUI()
        end
    end)
    
    -- 关闭按钮
    closeBtn.MouseButton1Click:Connect(toggleUI)
    
    -- 窗口拖拽
    local dragging = false
    local dragStart = Vector2.new()
    local startPos = UDim2.new()
    
    header.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = mainFrame.Position
        end
    end)
    
    UIS.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            mainFrame.Position = UDim2.new(
                startPos.X.Scale, startPos.X.Offset + delta.X,
                startPos.Y.Scale, startPos.Y.Offset + delta.Y
            )
        end
    end)
    
    UIS.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    -- 创建标签页
    local function createTab(name, icon)
        local tabBtn = new("TextButton", {
            Parent = sidebar,
            Size = UDim2.new(1, 0, 0, 44),
            BackgroundColor3 = Colors.Surface,
            BackgroundTransparency = 0.8,
            Text = "",
            AutoButtonColor = false,
        })
        
        local tabCorner = new("UICorner", {
            Parent = tabBtn,
            CornerRadius = UDim.new(0, 8),
        })
        
        local tabIcon = new("TextLabel", {
            Parent = tabBtn,
            Size = UDim2.fromOffset(24, 24),
            Position = UDim2.fromOffset(12, 10),
            BackgroundTransparency = 1,
            Text = icon or "•",
            FontFace = Fonts.Medium,
            TextSize = 16,
            TextColor3 = Colors.TextSecondary,
        })
        
        local tabLabel = new("TextLabel", {
            Parent = tabBtn,
            Size = UDim2.new(1, -48, 1, 0),
            Position = UDim2.fromOffset(48, 0),
            BackgroundTransparency = 1,
            Text = name,
            FontFace = Fonts.Medium,
            TextSize = 14,
            TextColor3 = Colors.TextSecondary,
            TextXAlignment = Enum.TextXAlignment.Left,
        })
        
        local tabContent = new("Frame", {
            Parent = mainContent,
            Size = UDim2.new(1, 0, 1, 0),
            BackgroundTransparency = 1,
            Visible = false,
        })
        
        local tab = {
            Name = name,
            Button = tabBtn,
            Content = tabContent,
            Active = false,
        }
        
        tabBtn.MouseButton1Click:Connect(function()
            if currentTab then
                currentTab.Content.Visible = false
                currentTab.Active = false
                tween(currentTab.Button, 0.2, {BackgroundColor3 = Colors.Surface})
            end
            
            currentTab = tab
            tab.Content.Visible = true
            tab.Active = true
            
            tween(tabBtn, 0.2, {BackgroundColor3 = Colors.Primary})
            tween(tabIcon, 0.2, {TextColor3 = Colors.Surface})
            tween(tabLabel, 0.2, {TextColor3 = Colors.Surface})
        end)
        
        table.insert(tabs, tab)
        if not currentTab then
            tabBtn.BackgroundColor3 = Colors.Primary
            tabIcon.TextColor3 = Colors.Surface
            tabLabel.TextColor3 = Colors.Surface
            tab.Content.Visible = true
            tab.Active = true
            currentTab = tab
        end
        
        return tabContent
    end
    
    -- 添加控件的方法
    local function addControls(contentFrame)
        local listLayout = new("UIListLayout", {
            Parent = contentFrame,
            SortOrder = Enum.SortOrder.LayoutOrder,
            Padding = UDim.new(0, 16),
        })
        
        local padding = new("UIPadding", {
            Parent = contentFrame,
            PaddingTop = UDim.new(0, 16),
            PaddingBottom = UDim.new(0, 16),
            PaddingLeft = UDim.new(0, 16),
            PaddingRight = UDim.new(0, 16),
        })
        
        -- 添加各种控件的函数
        local controls = {}
        
        function controls:AddSection(title)
            local section = new("Frame", {
                Parent = contentFrame,
                Size = UDim2.new(1, 0, 0, 0),
                BackgroundColor3 = Colors.Surface,
                BackgroundTransparency = 0.5,
                AutomaticSize = Enum.AutomaticSize.Y,
            })
            
            local sectionCorner = new("UICorner", {
                Parent = section,
                CornerRadius = UDim.new(0, 12),
            })
            
            local sectionPadding = new("UIPadding", {
                Parent = section,
                PaddingTop = UDim.new(0, 16),
                PaddingBottom = UDim.new(0, 16),
                PaddingLeft = UDim.new(0, 16),
                PaddingRight = UDim.new(0, 16),
            })
            
            local titleLabel = new("TextLabel", {
                Parent = section,
                Size = UDim2.new(1, 0, 0, 24),
                BackgroundTransparency = 1,
                Text = title,
                FontFace = Fonts.Semibold,
                TextSize = 16,
                TextColor3 = Colors.Text,
                TextXAlignment = Enum.TextXAlignment.Left,
            })
            
            local contentList = new("UIListLayout", {
                Parent = section,
                SortOrder = Enum.SortOrder.LayoutOrder,
                Padding = UDim.new(0, 12),
            })
            
            local contentFrame = new("Frame", {
                Parent = section,
                Size = UDim2.new(1, 0, 0, 0),
                Position = UDim2.fromOffset(0, 40),
                BackgroundTransparency = 1,
                AutomaticSize = Enum.AutomaticSize.Y,
            })
            
            return contentFrame
        end
        
        return controls
    end
    
    -- 公开API
    local window = {
        ScreenGui = screenGui,
        CreateTab = createTab,
        ShowNotification = createNotification,
        Toggle = toggleUI,
        AddControls = addControls,
    }
    
    -- 启动时显示通知
    task.spawn(function()
        task.wait(0.5)
        createNotification("Aurora UI 已启动！按 " .. keybind.Name .. " 键开关界面", "info", 4)
    end)
    
    return window
end

return Aurora
