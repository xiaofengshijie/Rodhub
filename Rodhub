local Rayfield = loadstring(game:HttpGet("https://gitee.com/roblox-smk/rayfield/raw/master/Rayfield"))()
local LocalPlayer = game.Players.LocalPlayer

local Window = Rayfield:CreateWindow({
    Name = "LOLHAX | "..LocalPlayer.Name,
    Icon = 0,
    LoadingTitle = "加载中",
    LoadingSubtitle = "LX脚本",
    Theme = "Default",
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,
    ConfigurationSaving = {
        Enabled = false,
        FolderName = nil,
        FileName = ""
    },
    Discord = {
        Enabled = false,
        Invite = "",
        RememberJoins = true
    },
    KeySystem = false,
    KeySettings = {
        Title = "",
        Subtitle = "",
        Note = "",
        FileName = "",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {""}
    }
})

-- 创建标签页
local GeneralTab = Window:CreateTab("主要功能")
local ExploitTab = Window:CreateTab("防怪")
local ESPTab = Window:CreateTab("透视")
local VisualsTab = Window:CreateTab("视觉效果")
local MiscTab = Window:CreateTab("杂项")
local ConfigTab = Window:CreateTab("配置")

-- 主要功能标签页
local GeneralAutomationSection = GeneralTab:CreateSection("Automation", true)

local GA_AutoInteractToggle = GeneralAutomationSection:CreateToggle({
    Name = "自动互动",
    CurrentValue = false,
    Flag = "GA_AutoInteract",
    Callback = function(Value)
        -- 回调函数
    end
})
GA_AutoInteractToggle:CreateKeybind({
    Name = "自动交互",
    CurrentKeybind = "R",
    HoldToInteract = true,
    Flag = "GA_AutoInteract_K",
    Callback = function(Key)
        -- 按键回调
    end
})

GeneralAutomationSection:CreateDropdown({
    Name = "自动交互选项",
    Options = {"Use Lockpick ( Doors )", "Use Lockpick ( Other )", "Ignore Light Sources", "Ignore Can-Die"},
    CurrentOption = {},
    MultipleOptions = true,
    Flag = "GA_AutoInteract_Options",
    Callback = function(Options)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateSlider({
    Name = "交互范围",
    Range = {1, 2},
    Increment = 1,
    Suffix = "单位",
    CurrentValue = 1,
    Flag = "GA_AutoInteract_Range",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateDivider()

local GA_EatCandiesToggle = GeneralAutomationSection:CreateToggle({
    Name = "自动吃糖果",
    CurrentValue = false,
    Flag = "GA_EatCandies",
    Callback = function(Value)
        -- 回调函数
    end
})
GA_EatCandiesToggle:CreateKeybind({
    Name = "自动使用糖果",
    CurrentKeybind = "V",
    HoldToInteract = true,
    Flag = "GA_EatCandies_K",
    Callback = function(Key)
        -- 按键回调
    end
})

GeneralAutomationSection:CreateToggle({
    Name = "自动隐藏",
    CurrentValue = false,
    Flag = "GA_AutoHide",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateToggle({
    Name = "预测可见检查",
    CurrentValue = false,
    Flag = "GA_AutoHide_VisCheck",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateSlider({
    Name = "预测时间",
    Range = {0.1, 1.5},
    Increment = 0.01,
    Suffix = "秒",
    CurrentValue = 0.5,
    Flag = "GA_AutoHide_PredictionTime",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateSlider({
    Name = "距离",
    Range = {0.8, 1.5},
    Increment = 0.1,
    Suffix = "倍",
    CurrentValue = 1,
    Flag = "GA_AutoHide_PredictionDistanceMultiplier",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateDivider()

local GA_MinecartInteractToggle = GeneralAutomationSection:CreateToggle({
    Name = "循环互动矿车",
    CurrentValue = false,
    Flag = "GA_MinecartInteract",
    Callback = function(Value)
        -- 回调函数
    end
})
GA_MinecartInteractToggle:CreateKeybind({
    Name = "矿车互动",
    CurrentKeybind = "H",
    HoldToInteract = true,
    Flag = "GA_MinecartInteract_K",
    Callback = function(Key)
        -- 按键回调
    end
})

GeneralAutomationSection:CreateToggle({
    Name = "自动解电器房",
    CurrentValue = false,
    Flag = "GA_AnchorAutoSolve",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateDivider()

GeneralAutomationSection:CreateToggle({
    Name = "自动解图书馆",
    CurrentValue = false,
    Flag = "GA_AutoPadlockSolve",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateSlider({
    Name = "自动开锁距离",
    Range = {10, 50},
    Increment = 1,
    Suffix = "单位",
    CurrentValue = 25,
    Flag = "GA_AutoPadlockSolve_Distance",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 主要功能标签页 - Notifying
local GeneralNotifyingSection = GeneralTab:CreateSection("Notifying", true)

GeneralNotifyingSection:CreateToggle({
    Name = "启用",
    CurrentValue = false,
    Flag = "GN_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateToggle({
    Name = "播放声音",
    CurrentValue = false,
    Flag = "GN_NotificationSound",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateSlider({
    Name = "音量",
    Range = {1, 10},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 2,
    Flag = "GN_NotificationSound_Volume",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateDivider()

GeneralNotifyingSection:CreateToggle({
    Name = "锁的密码",
    CurrentValue = false,
    Flag = "GN_AnchorCode",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateToggle({
    Name = "自动出图书馆锁密码",
    CurrentValue = false,
    Flag = "GN_PadlockCode",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateToggle({
    Name = "实体通知",
    CurrentValue = false,
    Flag = "GN_Entities",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateDropdown({
    Name = "实体列表",
    Options = {"Rush", "Blitz", "Ambush", "Eyes", "Lookman", "Halt", "Screech", "Gloombat Swarm", "Dread", "A-60", "A-120"},
    CurrentOption = {},
    MultipleOptions = true,
    Flag = "GN_Entities_Options",
    Callback = function(Options)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateDivider()

GeneralNotifyingSection:CreateDropdown({
    Name = "水平对齐",
    Options = {"Left", "Center", "Right"},
    CurrentOption = "Right",
    MultipleOptions = false,
    Flag = "GN_NotificationAlignment",
    Callback = function(Option)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateSlider({
    Name = "X偏移",
    Range = {-1, 1},
    Increment = 0.01,
    Suffix = "",
    CurrentValue = 0,
    Flag = "GN_NotificationOffset_X",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateSlider({
    Name = "Y偏移",
    Range = {-1, 1},
    Increment = 0.01,
    Suffix = "",
    CurrentValue = 0,
    Flag = "GN_NotificationOffset_Y",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateSlider({
    Name = "大小乘数",
    Range = {0.8, 3},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 1,
    Flag = "GN_NotificationDPISize",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateButton({
    Name = "测试通知",
    Callback = function()
        -- 回调函数
    end
})

-- 防怪标签页 - Self
local ExploitSelfSection = ExploitTab:CreateSection("Self", true)

ExploitSelfSection:CreateToggle({
    Name = "总是开启跳跃",
    CurrentValue = false,
    Flag = "ES_AlwaysJump",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateDivider()

ExploitSelfSection:CreateToggle({
    Name = "防苍蝇蛋",
    CurrentValue = false,
    Flag = "ES_AntiGloombat",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反抱脸虫",
    CurrentValue = false,
    Flag = "ES_AntiGiggle",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反地刺",
    CurrentValue = false,
    Flag = "ES_AntiSnare",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反假门",
    CurrentValue = false,
    Flag = "ES_AntiDupe",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反Eyes",
    CurrentValue = false,
    Flag = "ES_AntiEyes",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反Lookman",
    CurrentValue = false,
    Flag = "ES_AntiLookman",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反Seek掉的灯",
    CurrentValue = false,
    Flag = "ES_AntiChanedlier",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反Seek触手",
    CurrentValue = false,
    Flag = "ES_AntiSeekArms",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 防怪标签页 - Bypass
local ExploitBypassSection = ExploitTab:CreateSection("Bypass", true)

ExploitBypassSection:CreateToggle({
    Name = "始终假蹲",
    CurrentValue = false,
    Flag = "EB_CrouchSpoof",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitBypassSection:CreateToggle({
    Name = "速度绕过",
    CurrentValue = false,
    Flag = "EB_SpeedBypass",
    Callback = function(Value)
        -- 回调函数
    end
})

local EB_ACManipulateToggle = ExploitBypassSection:CreateToggle({
    Name = "反作弊操纵",
    CurrentValue = false,
    Flag = "EB_ACManipulate",
    Callback = function(Value)
        -- 回调函数
    end
})
EB_ACManipulateToggle:CreateKeybind({
    Name = "Anti-Cheat Manipulate",
    CurrentKeybind = "T",
    HoldToInteract = true,
    Flag = "EB_ACManipulate_K",
    Callback = function(Key)
        -- 按键回调
    end
})

-- 防怪标签页 - Removals
local ExploitRemovalsSection = ExploitTab:CreateSection("Removals", true)

ExploitRemovalsSection:CreateToggle({
    Name = "移除Seek",
    CurrentValue = false,
    Flag = "ER_RemoveSeek",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateToggle({
    Name = "无Screech",
    CurrentValue = false,
    Flag = "ER_NoScreech",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateToggle({
    Name = "无A-90",
    CurrentValue = false,
    Flag = "ER_NoA90",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateToggle({
    Name = "无Halt",
    CurrentValue = false,
    Flag = "ER_NoShade",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateDivider()

ExploitRemovalsSection:CreateToggle({
    Name = "无A-90伤害",
    CurrentValue = false,
    Flag = "ER_NoA90Damage",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateToggle({
    Name = "无Screech伤害",
    CurrentValue = false,
    Flag = "ER_NoScreechDamage",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateToggle({
    Name = "无Halt伤害",
    CurrentValue = false,
    Flag = "ER_NoShadeDamage",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 透视标签页 - Entities
local ESPEntitiesSection = ESPTab:CreateSection("Entities", true)

ESPEntitiesSection:CreateToggle({
    Name = "启用",
    CurrentValue = false,
    Flag = "ESPE_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPEntitiesSection:CreateDivider()

ESPEntitiesSection:CreateToggle({
    Name = "名字",
    CurrentValue = false,
    Flag = "ESPE_Name",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPEntitiesSection:CreateToggle({
    Name = "距离",
    CurrentValue = false,
    Flag = "ESPE_Distance",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPEntitiesSection:CreateToggle({
    Name = "突出显示填充",
    CurrentValue = false,
    Flag = "ESPE_Fill",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPEntitiesSection:CreateToggle({
    Name = "突出显示大纲",
    CurrentValue = false,
    Flag = "ESPE_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 透视标签页 - Players
local ESPPlayersSection = ESPTab:CreateSection("Players", true)

ESPPlayersSection:CreateToggle({
    Name = "启用",
    CurrentValue = false,
    Flag = "ESPP_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPPlayersSection:CreateDivider()

ESPPlayersSection:CreateToggle({
    Name = "名字",
    CurrentValue = false,
    Flag = "ESPP_Name",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPPlayersSection:CreateToggle({
    Name = "距离",
    CurrentValue = false,
    Flag = "ESPP_Distance",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPPlayersSection:CreateToggle({
    Name = "突出显示填充",
    CurrentValue = false,
    Flag = "ESPP_Fill",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPPlayersSection:CreateToggle({
    Name = "突出显示大纲",
    CurrentValue = false,
    Flag = "ESPP_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 透视标签页 - Interactables (Main)
local ESPInteractablesTabbox = ESPTab:CreateTabbox("Interactables")
local ESPInteractablesMainTab = ESPInteractablesTabbox:CreateTab("Main")

local ESPInteractablesMainSection = ESPInteractablesMainTab:CreateSection("Main", true)

ESPInteractablesMainSection:CreateToggle({
    Name = "启用",
    CurrentValue = false,
    Flag = "ESPI_M_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPInteractablesMainSection:CreateDivider()

ESPInteractablesMainSection:CreateToggle({
    Name = "名字",
    CurrentValue = false,
    Flag = "ESPI_M_Name",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPInteractablesMainSection:CreateToggle({
    Name = "距离",
    CurrentValue = false,
    Flag = "ESPI_M_Distance",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPInteractablesMainSection:CreateToggle({
    Name = "突出显示填充",
    CurrentValue = false,
    Flag = "ESPI_M_Fill",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPInteractablesMainSection:CreateToggle({
    Name = "突出显示大纲",
    CurrentValue = false,
    Flag = "ESPI_M_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 透视标签页 - Interactables (Configurate)
local ESPInteractablesConfigurateTab = ESPInteractablesTabbox:CreateTab("Configurate")

local ESPInteractablesConfigurateSection = ESPInteractablesConfigurateTab:CreateSection("Configurate", true)

local ESPI_C_DoorsToggle = ESPInteractablesConfigurateSection:CreateToggle({
    Name = "门",
    CurrentValue = false,
    Flag = "ESPI_C_Doors",
    Callback = function(Value)
        -- 回调函数
    end
})
ESPI_C_DoorsToggle:CreateColorPicker({
    Name = "文本颜色",
    Color = Color3.new(1, 1, 1),
    Flag = "ESPI_C_Doors_F",
    Callback = function(Color)
        -- 回调函数
    end
})
ESPI_C_DoorsToggle:CreateColorPicker({
    Name = "轮廓颜色",
    Color = Color3.new(1, 1, 1),
    Flag = "ESPI_C_Doors_O",
    Callback = function(Color)
        -- 回调函数
    end
})

-- 视觉效果标签页 - View
local VisualsViewSection = VisualsTab:CreateSection("View", true)

VisualsViewSection:CreateSlider({
    Name = "视角",
    Range = {0, 120},
    Increment = 1,
    Suffix = "度",
    CurrentValue = 0,
    Flag = "VV_FieldOfView",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateToggle({
    Name = "无相机抖动",
    CurrentValue = false,
    Flag = "VV_NoCamShake",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateToggle({
    Name = "无相机晃动",
    CurrentValue = false,
    Flag = "VV_NoLookBob",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateDivider()

local VV_ThirdpersonToggle = VisualsViewSection:CreateToggle({
    Name = "第三人称",
    CurrentValue = false,
    Flag = "VV_Thirdperson",
    Callback = function(Value)
        -- 回调函数
    end
})
VV_ThirdpersonToggle:CreateKeybind({
    Name = "Thirdperson",
    CurrentKeybind = "V",
    HoldToInteract = false,
    Flag = "VV_Thirdperson_K",
    Callback = function(Key)
        -- 按键回调
    end
})

VisualsViewSection:CreateToggle({
    Name = "墙检测",
    CurrentValue = false,
    Flag = "VV_ThirdpersonCamCollision",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "距离",
    Range = {5, 30},
    Increment = 1,
    Suffix = "单位",
    CurrentValue = 10,
    Flag = "VV_ThirdpersonDistance",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "偏移",
    Range = {-5, 5},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 0,
    Flag = "VV_ThirdpersonOffset",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "垂直偏移",
    Range = {-5, 5},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 0,
    Flag = "VV_ThirdpersonOffsetUp",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateDivider()

VisualsViewSection:CreateToggle({
    Name = "显示模型便宜",
    CurrentValue = false,
    Flag = "VV_ViewmodelOffset",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "X",
    Range = {-5, 5},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 0,
    Flag = "VV_ViewmodelOffset_X",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "Y",
    Range = {-5, 5},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 0,
    Flag = "VV_ViewmodelOffset_Y",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "Z",
    Range = {-5, 5},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 0,
    Flag = "VV_ViewmodelOffset_Z",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 视觉效果标签页 - 世界
local VisualsWorldSection = VisualsTab:CreateSection("世界", true)

local VW_AmbienceToggle = VisualsWorldSection:CreateToggle({
    Name = "高亮",
    CurrentValue = false,
    Flag = "VW_Ambience",
    Callback = function(Value)
        -- 回调函数
    end
})
VW_AmbienceToggle:CreateColorPicker({
    Name = "Ambience Color",
    Color = Color3.new(1, 1, 1),
    Flag = "VW_Ambience_C",
    Callback = function(Color)
        -- 回调函数
    end
})

VisualsWorldSection:CreateToggle({
    Name = "移除雾",
    CurrentValue = false,
    Flag = "VW_NoFog",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsWorldSection:CreateDivider()

VisualsWorldSection:CreateToggle({
    Name = "显示Rush/Ambush路径点",
    CurrentValue = false,
    Flag = "VW_RushNodes",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 视觉效果标签页 - 移除
local VisualsRemovalsSection = VisualsTab:CreateSection("移除", true)

VisualsRemovalsSection:CreateToggle({
    Name = "无Haste效果",
    CurrentValue = false,
    Flag = "VR_NoHasteEffect",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "没有hide晕影",
    CurrentValue = false,
    Flag = "VR_NoHidingVignette",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "无halt效果",
    CurrentValue = false,
    Flag = "VR_NoHaltEffect",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "无复活过场动画",
    CurrentValue = false,
    Flag = "VR_NoReviveCutscene",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateDivider()

VisualsRemovalsSection:CreateToggle({
    Name = "移除Timothy跳脸",
    CurrentValue = false,
    Flag = "VR_TimothyJumpscare",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "移除Glitch跳脸",
    CurrentValue = false,
    Flag = "VR_NoGlitchJumpscare",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "移除Void跳脸",
    CurrentValue = false,
    Flag = "VR_NoVoidEffect",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "移除Seek房间效果",
    CurrentValue = false,
    Flag = "VR_NoSeekEffects",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 杂项标签页 - Movement
local MiscMovementSection = MiscTab:CreateSection("Movement", true)

MiscMovementSection:CreateToggle({
    Name = "启用速度修饰符",
    CurrentValue = false,
    Flag = "MM_Walkspeed",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscMovementSection:CreateSlider({
    Name = "步行速度",
    Range = {10, 50},
    Increment = 1,
    Suffix = "单位",
    CurrentValue = 20,
    Flag = "MM_Walkspeed_S",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscMovementSection:CreateSlider({
    Name = "梯子速度提升",
    Range = {0, 50},
    Increment = 1,
    Suffix = "单位",
    CurrentValue = 0,
    Flag = "MM_Walkspeed_Boost",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscMovementSection:CreateDivider()

MiscMovementSection:CreateToggle({
    Name = "没有加速",
    CurrentValue = false,
    Flag = "MM_NoAcceleration",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 杂项标签页 - Audio
local MiscAudioSection = MiscTab:CreateSection("Audio", true)

MiscAudioSection:CreateToggle({
    Name = "静音干扰修改器",
    CurrentValue = false,
    Flag = "MA_SilentJammin",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscAudioSection:CreateDivider()

MiscAudioSection:CreateToggle({
    Name = "没有匆忙的声音",
    CurrentValue = false,
    Flag = "MA_NoHasteSound",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscAudioSection:CreateToggle({
    Name = "没有交互声",
    CurrentValue = false,
    Flag = "MA_SilentInteracting",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscAudioSection:CreateToggle({
    Name = "没有随机的氛围",
    CurrentValue = false,
    Flag = "MA_NoRandomAmbience",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscAudioSection:CreateToggle({
    Name = "沉默的苍蝇",
    CurrentValue = false,
    Flag = "MA_SilentGloombat",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 杂项标签页 - Other
local MiscellaneousOtherSection = MiscTab:CreateSection("Other", true)

MiscellaneousOtherSection:CreateToggle({
    Name = "没有Roblox Void",
    CurrentValue = false,
    Flag = "MO_antirobloxvoid",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscellaneousOtherSection:CreateDivider()

MiscellaneousOtherSection:CreateButton({
    Name = "Play Again",
    Callback = function()
        -- 回调函数
    end
})

MiscellaneousOtherSection:CreateButton({
    Name = "Lobby",
    Callback = function()
        -- 回调函数
    end
})

MiscellaneousOtherSection:CreateButton({
    Name = "Revive",
    Callback = function()
        -- 回调函数
    end
})

-- 配置标签页
local ConfigSection = ConfigTab:CreateSection("设置", true)

ConfigSection:CreateButton({
    Name = "保存配置",
    Callback = function()
        -- 回调函数
    end
})

ConfigSection:CreateButton({
    Name = "加载配置",
    Callback = function()
        -- 回调函数
    end
})

-- 加载UI
Rayfield:LoadConfiguration()local Rayfield = loadstring(game:HttpGet("https://gitee.com/roblox-smk/rayfield/raw/master/Rayfield"))()
local LocalPlayer = game.Players.LocalPlayer

local Window = Rayfield:CreateWindow({
    Name = "LOLHAX | "..LocalPlayer.Name,
    Icon = 0,
    LoadingTitle = "加载中",
    LoadingSubtitle = "LX脚本",
    Theme = "Default",
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,
    ConfigurationSaving = {
        Enabled = false,
        FolderName = nil,
        FileName = ""
    },
    Discord = {
        Enabled = false,
        Invite = "",
        RememberJoins = true
    },
    KeySystem = false,
    KeySettings = {
        Title = "",
        Subtitle = "",
        Note = "",
        FileName = "",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {""}
    }
})

-- 创建标签页
local GeneralTab = Window:CreateTab("主要功能")
local ExploitTab = Window:CreateTab("防怪")
local ESPTab = Window:CreateTab("透视")
local VisualsTab = Window:CreateTab("视觉效果")
local MiscTab = Window:CreateTab("杂项")
local ConfigTab = Window:CreateTab("配置")

-- 主要功能标签页
local GeneralAutomationSection = GeneralTab:CreateSection("Automation", true)

local GA_AutoInteractToggle = GeneralAutomationSection:CreateToggle({
    Name = "自动互动",
    CurrentValue = false,
    Flag = "GA_AutoInteract",
    Callback = function(Value)
        -- 回调函数
    end
})
GA_AutoInteractToggle:CreateKeybind({
    Name = "自动交互",
    CurrentKeybind = "R",
    HoldToInteract = true,
    Flag = "GA_AutoInteract_K",
    Callback = function(Key)
        -- 按键回调
    end
})

GeneralAutomationSection:CreateDropdown({
    Name = "自动交互选项",
    Options = {"Use Lockpick ( Doors )", "Use Lockpick ( Other )", "Ignore Light Sources", "Ignore Can-Die"},
    CurrentOption = {},
    MultipleOptions = true,
    Flag = "GA_AutoInteract_Options",
    Callback = function(Options)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateSlider({
    Name = "交互范围",
    Range = {1, 2},
    Increment = 1,
    Suffix = "单位",
    CurrentValue = 1,
    Flag = "GA_AutoInteract_Range",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateDivider()

local GA_EatCandiesToggle = GeneralAutomationSection:CreateToggle({
    Name = "自动吃糖果",
    CurrentValue = false,
    Flag = "GA_EatCandies",
    Callback = function(Value)
        -- 回调函数
    end
})
GA_EatCandiesToggle:CreateKeybind({
    Name = "自动使用糖果",
    CurrentKeybind = "V",
    HoldToInteract = true,
    Flag = "GA_EatCandies_K",
    Callback = function(Key)
        -- 按键回调
    end
})

GeneralAutomationSection:CreateToggle({
    Name = "自动隐藏",
    CurrentValue = false,
    Flag = "GA_AutoHide",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateToggle({
    Name = "预测可见检查",
    CurrentValue = false,
    Flag = "GA_AutoHide_VisCheck",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateSlider({
    Name = "预测时间",
    Range = {0.1, 1.5},
    Increment = 0.01,
    Suffix = "秒",
    CurrentValue = 0.5,
    Flag = "GA_AutoHide_PredictionTime",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateSlider({
    Name = "距离",
    Range = {0.8, 1.5},
    Increment = 0.1,
    Suffix = "倍",
    CurrentValue = 1,
    Flag = "GA_AutoHide_PredictionDistanceMultiplier",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateDivider()

local GA_MinecartInteractToggle = GeneralAutomationSection:CreateToggle({
    Name = "循环互动矿车",
    CurrentValue = false,
    Flag = "GA_MinecartInteract",
    Callback = function(Value)
        -- 回调函数
    end
})
GA_MinecartInteractToggle:CreateKeybind({
    Name = "矿车互动",
    CurrentKeybind = "H",
    HoldToInteract = true,
    Flag = "GA_MinecartInteract_K",
    Callback = function(Key)
        -- 按键回调
    end
})

GeneralAutomationSection:CreateToggle({
    Name = "自动解电器房",
    CurrentValue = false,
    Flag = "GA_AnchorAutoSolve",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateDivider()

GeneralAutomationSection:CreateToggle({
    Name = "自动解图书馆",
    CurrentValue = false,
    Flag = "GA_AutoPadlockSolve",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateSlider({
    Name = "自动开锁距离",
    Range = {10, 50},
    Increment = 1,
    Suffix = "单位",
    CurrentValue = 25,
    Flag = "GA_AutoPadlockSolve_Distance",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 主要功能标签页 - Notifying
local GeneralNotifyingSection = GeneralTab:CreateSection("Notifying", true)

GeneralNotifyingSection:CreateToggle({
    Name = "启用",
    CurrentValue = false,
    Flag = "GN_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateToggle({
    Name = "播放声音",
    CurrentValue = false,
    Flag = "GN_NotificationSound",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateSlider({
    Name = "音量",
    Range = {1, 10},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 2,
    Flag = "GN_NotificationSound_Volume",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateDivider()

GeneralNotifyingSection:CreateToggle({
    Name = "锁的密码",
    CurrentValue = false,
    Flag = "GN_AnchorCode",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateToggle({
    Name = "自动出图书馆锁密码",
    CurrentValue = false,
    Flag = "GN_PadlockCode",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateToggle({
    Name = "实体通知",
    CurrentValue = false,
    Flag = "GN_Entities",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateDropdown({
    Name = "实体列表",
    Options = {"Rush", "Blitz", "Ambush", "Eyes", "Lookman", "Halt", "Screech", "Gloombat Swarm", "Dread", "A-60", "A-120"},
    CurrentOption = {},
    MultipleOptions = true,
    Flag = "GN_Entities_Options",
    Callback = function(Options)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateDivider()

GeneralNotifyingSection:CreateDropdown({
    Name = "水平对齐",
    Options = {"Left", "Center", "Right"},
    CurrentOption = "Right",
    MultipleOptions = false,
    Flag = "GN_NotificationAlignment",
    Callback = function(Option)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateSlider({
    Name = "X偏移",
    Range = {-1, 1},
    Increment = 0.01,
    Suffix = "",
    CurrentValue = 0,
    Flag = "GN_NotificationOffset_X",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateSlider({
    Name = "Y偏移",
    Range = {-1, 1},
    Increment = 0.01,
    Suffix = "",
    CurrentValue = 0,
    Flag = "GN_NotificationOffset_Y",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateSlider({
    Name = "大小乘数",
    Range = {0.8, 3},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 1,
    Flag = "GN_NotificationDPISize",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateButton({
    Name = "测试通知",
    Callback = function()
        -- 回调函数
    end
})

-- 防怪标签页 - Self
local ExploitSelfSection = ExploitTab:CreateSection("Self", true)

ExploitSelfSection:CreateToggle({
    Name = "总是开启跳跃",
    CurrentValue = false,
    Flag = "ES_AlwaysJump",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateDivider()

ExploitSelfSection:CreateToggle({
    Name = "防苍蝇蛋",
    CurrentValue = false,
    Flag = "ES_AntiGloombat",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反抱脸虫",
    CurrentValue = false,
    Flag = "ES_AntiGiggle",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反地刺",
    CurrentValue = false,
    Flag = "ES_AntiSnare",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反假门",
    CurrentValue = false,
    Flag = "ES_AntiDupe",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反Eyes",
    CurrentValue = false,
    Flag = "ES_AntiEyes",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反Lookman",
    CurrentValue = false,
    Flag = "ES_AntiLookman",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反Seek掉的灯",
    CurrentValue = false,
    Flag = "ES_AntiChanedlier",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反Seek触手",
    CurrentValue = false,
    Flag = "ES_AntiSeekArms",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 防怪标签页 - Bypass
local ExploitBypassSection = ExploitTab:CreateSection("Bypass", true)

ExploitBypassSection:CreateToggle({
    Name = "始终假蹲",
    CurrentValue = false,
    Flag = "EB_CrouchSpoof",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitBypassSection:CreateToggle({
    Name = "速度绕过",
    CurrentValue = false,
    Flag = "EB_SpeedBypass",
    Callback = function(Value)
        -- 回调函数
    end
})

local EB_ACManipulateToggle = ExploitBypassSection:CreateToggle({
    Name = "反作弊操纵",
    CurrentValue = false,
    Flag = "EB_ACManipulate",
    Callback = function(Value)
        -- 回调函数
    end
})
EB_ACManipulateToggle:CreateKeybind({
    Name = "Anti-Cheat Manipulate",
    CurrentKeybind = "T",
    HoldToInteract = true,
    Flag = "EB_ACManipulate_K",
    Callback = function(Key)
        -- 按键回调
    end
})

-- 防怪标签页 - Removals
local ExploitRemovalsSection = ExploitTab:CreateSection("Removals", true)

ExploitRemovalsSection:CreateToggle({
    Name = "移除Seek",
    CurrentValue = false,
    Flag = "ER_RemoveSeek",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateToggle({
    Name = "无Screech",
    CurrentValue = false,
    Flag = "ER_NoScreech",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateToggle({
    Name = "无A-90",
    CurrentValue = false,
    Flag = "ER_NoA90",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateToggle({
    Name = "无Halt",
    CurrentValue = false,
    Flag = "ER_NoShade",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateDivider()

ExploitRemovalsSection:CreateToggle({
    Name = "无A-90伤害",
    CurrentValue = false,
    Flag = "ER_NoA90Damage",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateToggle({
    Name = "无Screech伤害",
    CurrentValue = false,
    Flag = "ER_NoScreechDamage",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateToggle({
    Name = "无Halt伤害",
    CurrentValue = false,
    Flag = "ER_NoShadeDamage",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 透视标签页 - Entities
local ESPEntitiesSection = ESPTab:CreateSection("Entities", true)

ESPEntitiesSection:CreateToggle({
    Name = "启用",
    CurrentValue = false,
    Flag = "ESPE_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPEntitiesSection:CreateDivider()

ESPEntitiesSection:CreateToggle({
    Name = "名字",
    CurrentValue = false,
    Flag = "ESPE_Name",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPEntitiesSection:CreateToggle({
    Name = "距离",
    CurrentValue = false,
    Flag = "ESPE_Distance",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPEntitiesSection:CreateToggle({
    Name = "突出显示填充",
    CurrentValue = false,
    Flag = "ESPE_Fill",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPEntitiesSection:CreateToggle({
    Name = "突出显示大纲",
    CurrentValue = false,
    Flag = "ESPE_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 透视标签页 - Players
local ESPPlayersSection = ESPTab:CreateSection("Players", true)

ESPPlayersSection:CreateToggle({
    Name = "启用",
    CurrentValue = false,
    Flag = "ESPP_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPPlayersSection:CreateDivider()

ESPPlayersSection:CreateToggle({
    Name = "名字",
    CurrentValue = false,
    Flag = "ESPP_Name",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPPlayersSection:CreateToggle({
    Name = "距离",
    CurrentValue = false,
    Flag = "ESPP_Distance",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPPlayersSection:CreateToggle({
    Name = "突出显示填充",
    CurrentValue = false,
    Flag = "ESPP_Fill",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPPlayersSection:CreateToggle({
    Name = "突出显示大纲",
    CurrentValue = false,
    Flag = "ESPP_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 透视标签页 - Interactables (Main)
local ESPInteractablesTabbox = ESPTab:CreateTabbox("Interactables")
local ESPInteractablesMainTab = ESPInteractablesTabbox:CreateTab("Main")

local ESPInteractablesMainSection = ESPInteractablesMainTab:CreateSection("Main", true)

ESPInteractablesMainSection:CreateToggle({
    Name = "启用",
    CurrentValue = false,
    Flag = "ESPI_M_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPInteractablesMainSection:CreateDivider()

ESPInteractablesMainSection:CreateToggle({
    Name = "名字",
    CurrentValue = false,
    Flag = "ESPI_M_Name",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPInteractablesMainSection:CreateToggle({
    Name = "距离",
    CurrentValue = false,
    Flag = "ESPI_M_Distance",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPInteractablesMainSection:CreateToggle({
    Name = "突出显示填充",
    CurrentValue = false,
    Flag = "ESPI_M_Fill",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPInteractablesMainSection:CreateToggle({
    Name = "突出显示大纲",
    CurrentValue = false,
    Flag = "ESPI_M_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 透视标签页 - Interactables (Configurate)
local ESPInteractablesConfigurateTab = ESPInteractablesTabbox:CreateTab("Configurate")

local ESPInteractablesConfigurateSection = ESPInteractablesConfigurateTab:CreateSection("Configurate", true)

local ESPI_C_DoorsToggle = ESPInteractablesConfigurateSection:CreateToggle({
    Name = "门",
    CurrentValue = false,
    Flag = "ESPI_C_Doors",
    Callback = function(Value)
        -- 回调函数
    end
})
ESPI_C_DoorsToggle:CreateColorPicker({
    Name = "文本颜色",
    Color = Color3.new(1, 1, 1),
    Flag = "ESPI_C_Doors_F",
    Callback = function(Color)
        -- 回调函数
    end
})
ESPI_C_DoorsToggle:CreateColorPicker({
    Name = "轮廓颜色",
    Color = Color3.new(1, 1, 1),
    Flag = "ESPI_C_Doors_O",
    Callback = function(Color)
        -- 回调函数
    end
})

-- 视觉效果标签页 - View
local VisualsViewSection = VisualsTab:CreateSection("View", true)

VisualsViewSection:CreateSlider({
    Name = "视角",
    Range = {0, 120},
    Increment = 1,
    Suffix = "度",
    CurrentValue = 0,
    Flag = "VV_FieldOfView",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateToggle({
    Name = "无相机抖动",
    CurrentValue = false,
    Flag = "VV_NoCamShake",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateToggle({
    Name = "无相机晃动",
    CurrentValue = false,
    Flag = "VV_NoLookBob",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateDivider()

local VV_ThirdpersonToggle = VisualsViewSection:CreateToggle({
    Name = "第三人称",
    CurrentValue = false,
    Flag = "VV_Thirdperson",
    Callback = function(Value)
        -- 回调函数
    end
})
VV_ThirdpersonToggle:CreateKeybind({
    Name = "Thirdperson",
    CurrentKeybind = "V",
    HoldToInteract = false,
    Flag = "VV_Thirdperson_K",
    Callback = function(Key)
        -- 按键回调
    end
})

VisualsViewSection:CreateToggle({
    Name = "墙检测",
    CurrentValue = false,
    Flag = "VV_ThirdpersonCamCollision",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "距离",
    Range = {5, 30},
    Increment = 1,
    Suffix = "单位",
    CurrentValue = 10,
    Flag = "VV_ThirdpersonDistance",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "偏移",
    Range = {-5, 5},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 0,
    Flag = "VV_ThirdpersonOffset",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "垂直偏移",
    Range = {-5, 5},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 0,
    Flag = "VV_ThirdpersonOffsetUp",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateDivider()

VisualsViewSection:CreateToggle({
    Name = "显示模型便宜",
    CurrentValue = false,
    Flag = "VV_ViewmodelOffset",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "X",
    Range = {-5, 5},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 0,
    Flag = "VV_ViewmodelOffset_X",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "Y",
    Range = {-5, 5},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 0,
    Flag = "VV_ViewmodelOffset_Y",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "Z",
    Range = {-5, 5},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 0,
    Flag = "VV_ViewmodelOffset_Z",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 视觉效果标签页 - 世界
local VisualsWorldSection = VisualsTab:CreateSection("世界", true)

local VW_AmbienceToggle = VisualsWorldSection:CreateToggle({
    Name = "高亮",
    CurrentValue = false,
    Flag = "VW_Ambience",
    Callback = function(Value)
        -- 回调函数
    end
})
VW_AmbienceToggle:CreateColorPicker({
    Name = "Ambience Color",
    Color = Color3.new(1, 1, 1),
    Flag = "VW_Ambience_C",
    Callback = function(Color)
        -- 回调函数
    end
})

VisualsWorldSection:CreateToggle({
    Name = "移除雾",
    CurrentValue = false,
    Flag = "VW_NoFog",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsWorldSection:CreateDivider()

VisualsWorldSection:CreateToggle({
    Name = "显示Rush/Ambush路径点",
    CurrentValue = false,
    Flag = "VW_RushNodes",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 视觉效果标签页 - 移除
local VisualsRemovalsSection = VisualsTab:CreateSection("移除", true)

VisualsRemovalsSection:CreateToggle({
    Name = "无Haste效果",
    CurrentValue = false,
    Flag = "VR_NoHasteEffect",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "没有hide晕影",
    CurrentValue = false,
    Flag = "VR_NoHidingVignette",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "无halt效果",
    CurrentValue = false,
    Flag = "VR_NoHaltEffect",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "无复活过场动画",
    CurrentValue = false,
    Flag = "VR_NoReviveCutscene",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateDivider()

VisualsRemovalsSection:CreateToggle({
    Name = "移除Timothy跳脸",
    CurrentValue = false,
    Flag = "VR_TimothyJumpscare",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "移除Glitch跳脸",
    CurrentValue = false,
    Flag = "VR_NoGlitchJumpscare",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "移除Void跳脸",
    CurrentValue = false,
    Flag = "VR_NoVoidEffect",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "移除Seek房间效果",
    CurrentValue = false,
    Flag = "VR_NoSeekEffects",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 杂项标签页 - Movement
local MiscMovementSection = MiscTab:CreateSection("Movement", true)

MiscMovementSection:CreateToggle({
    Name = "启用速度修饰符",
    CurrentValue = false,
    Flag = "MM_Walkspeed",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscMovementSection:CreateSlider({
    Name = "步行速度",
    Range = {10, 50},
    Increment = 1,
    Suffix = "单位",
    CurrentValue = 20,
    Flag = "MM_Walkspeed_S",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscMovementSection:CreateSlider({
    Name = "梯子速度提升",
    Range = {0, 50},
    Increment = 1,
    Suffix = "单位",
    CurrentValue = 0,
    Flag = "MM_Walkspeed_Boost",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscMovementSection:CreateDivider()

MiscMovementSection:CreateToggle({
    Name = "没有加速",
    CurrentValue = false,
    Flag = "MM_NoAcceleration",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 杂项标签页 - Audio
local MiscAudioSection = MiscTab:CreateSection("Audio", true)

MiscAudioSection:CreateToggle({
    Name = "静音干扰修改器",
    CurrentValue = false,
    Flag = "MA_SilentJammin",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscAudioSection:CreateDivider()

MiscAudioSection:CreateToggle({
    Name = "没有匆忙的声音",
    CurrentValue = false,
    Flag = "MA_NoHasteSound",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscAudioSection:CreateToggle({
    Name = "没有交互声",
    CurrentValue = false,
    Flag = "MA_SilentInteracting",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscAudioSection:CreateToggle({
    Name = "没有随机的氛围",
    CurrentValue = false,
    Flag = "MA_NoRandomAmbience",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscAudioSection:CreateToggle({
    Name = "沉默的苍蝇",
    CurrentValue = false,
    Flag = "MA_SilentGloombat",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 杂项标签页 - Other
local MiscellaneousOtherSection = MiscTab:CreateSection("Other", true)

MiscellaneousOtherSection:CreateToggle({
    Name = "没有Roblox Void",
    CurrentValue = false,
    Flag = "MO_antirobloxvoid",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscellaneousOtherSection:CreateDivider()

MiscellaneousOtherSection:CreateButton({
    Name = "Play Again",
    Callback = function()
        -- 回调函数
    end
})

MiscellaneousOtherSection:CreateButton({
    Name = "Lobby",
    Callback = function()
        -- 回调函数
    end
})

MiscellaneousOtherSection:CreateButton({
    Name = "Revive",
    Callback = function()
        -- 回调函数
    end
})

-- 配置标签页
local ConfigSection = ConfigTab:CreateSection("设置", true)

ConfigSection:CreateButton({
    Name = "保存配置",
    Callback = function()
        -- 回调函数
    end
})

ConfigSection:CreateButton({
    Name = "加载配置",
    Callback = function()
        -- 回调函数
    end
})

-- 加载UI
Rayfield:LoadConfiguration()local Rayfield = loadstring(game:HttpGet("https://gitee.com/roblox-smk/rayfield/raw/master/Rayfield"))()
local LocalPlayer = game.Players.LocalPlayer

local Window = Rayfield:CreateWindow({
    Name = "LOLHAX | "..LocalPlayer.Name,
    Icon = 0,
    LoadingTitle = "加载中",
    LoadingSubtitle = "LX脚本",
    Theme = "Default",
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,
    ConfigurationSaving = {
        Enabled = false,
        FolderName = nil,
        FileName = ""
    },
    Discord = {
        Enabled = false,
        Invite = "",
        RememberJoins = true
    },
    KeySystem = false,
    KeySettings = {
        Title = "",
        Subtitle = "",
        Note = "",
        FileName = "",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {""}
    }
})

-- 创建标签页
local GeneralTab = Window:CreateTab("主要功能")
local ExploitTab = Window:CreateTab("防怪")
local ESPTab = Window:CreateTab("透视")
local VisualsTab = Window:CreateTab("视觉效果")
local MiscTab = Window:CreateTab("杂项")
local ConfigTab = Window:CreateTab("配置")

-- 主要功能标签页
local GeneralAutomationSection = GeneralTab:CreateSection("Automation", true)

local GA_AutoInteractToggle = GeneralAutomationSection:CreateToggle({
    Name = "自动互动",
    CurrentValue = false,
    Flag = "GA_AutoInteract",
    Callback = function(Value)
        -- 回调函数
    end
})
GA_AutoInteractToggle:CreateKeybind({
    Name = "自动交互",
    CurrentKeybind = "R",
    HoldToInteract = true,
    Flag = "GA_AutoInteract_K",
    Callback = function(Key)
        -- 按键回调
    end
})

GeneralAutomationSection:CreateDropdown({
    Name = "自动交互选项",
    Options = {"Use Lockpick ( Doors )", "Use Lockpick ( Other )", "Ignore Light Sources", "Ignore Can-Die"},
    CurrentOption = {},
    MultipleOptions = true,
    Flag = "GA_AutoInteract_Options",
    Callback = function(Options)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateSlider({
    Name = "交互范围",
    Range = {1, 2},
    Increment = 1,
    Suffix = "单位",
    CurrentValue = 1,
    Flag = "GA_AutoInteract_Range",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateDivider()

local GA_EatCandiesToggle = GeneralAutomationSection:CreateToggle({
    Name = "自动吃糖果",
    CurrentValue = false,
    Flag = "GA_EatCandies",
    Callback = function(Value)
        -- 回调函数
    end
})
GA_EatCandiesToggle:CreateKeybind({
    Name = "自动使用糖果",
    CurrentKeybind = "V",
    HoldToInteract = true,
    Flag = "GA_EatCandies_K",
    Callback = function(Key)
        -- 按键回调
    end
})

GeneralAutomationSection:CreateToggle({
    Name = "自动隐藏",
    CurrentValue = false,
    Flag = "GA_AutoHide",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateToggle({
    Name = "预测可见检查",
    CurrentValue = false,
    Flag = "GA_AutoHide_VisCheck",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateSlider({
    Name = "预测时间",
    Range = {0.1, 1.5},
    Increment = 0.01,
    Suffix = "秒",
    CurrentValue = 0.5,
    Flag = "GA_AutoHide_PredictionTime",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateSlider({
    Name = "距离",
    Range = {0.8, 1.5},
    Increment = 0.1,
    Suffix = "倍",
    CurrentValue = 1,
    Flag = "GA_AutoHide_PredictionDistanceMultiplier",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateDivider()

local GA_MinecartInteractToggle = GeneralAutomationSection:CreateToggle({
    Name = "循环互动矿车",
    CurrentValue = false,
    Flag = "GA_MinecartInteract",
    Callback = function(Value)
        -- 回调函数
    end
})
GA_MinecartInteractToggle:CreateKeybind({
    Name = "矿车互动",
    CurrentKeybind = "H",
    HoldToInteract = true,
    Flag = "GA_MinecartInteract_K",
    Callback = function(Key)
        -- 按键回调
    end
})

GeneralAutomationSection:CreateToggle({
    Name = "自动解电器房",
    CurrentValue = false,
    Flag = "GA_AnchorAutoSolve",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateDivider()

GeneralAutomationSection:CreateToggle({
    Name = "自动解图书馆",
    CurrentValue = false,
    Flag = "GA_AutoPadlockSolve",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateSlider({
    Name = "自动开锁距离",
    Range = {10, 50},
    Increment = 1,
    Suffix = "单位",
    CurrentValue = 25,
    Flag = "GA_AutoPadlockSolve_Distance",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 主要功能标签页 - Notifying
local GeneralNotifyingSection = GeneralTab:CreateSection("Notifying", true)

GeneralNotifyingSection:CreateToggle({
    Name = "启用",
    CurrentValue = false,
    Flag = "GN_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateToggle({
    Name = "播放声音",
    CurrentValue = false,
    Flag = "GN_NotificationSound",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateSlider({
    Name = "音量",
    Range = {1, 10},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 2,
    Flag = "GN_NotificationSound_Volume",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateDivider()

GeneralNotifyingSection:CreateToggle({
    Name = "锁的密码",
    CurrentValue = false,
    Flag = "GN_AnchorCode",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateToggle({
    Name = "自动出图书馆锁密码",
    CurrentValue = false,
    Flag = "GN_PadlockCode",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateToggle({
    Name = "实体通知",
    CurrentValue = false,
    Flag = "GN_Entities",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateDropdown({
    Name = "实体列表",
    Options = {"Rush", "Blitz", "Ambush", "Eyes", "Lookman", "Halt", "Screech", "Gloombat Swarm", "Dread", "A-60", "A-120"},
    CurrentOption = {},
    MultipleOptions = true,
    Flag = "GN_Entities_Options",
    Callback = function(Options)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateDivider()

GeneralNotifyingSection:CreateDropdown({
    Name = "水平对齐",
    Options = {"Left", "Center", "Right"},
    CurrentOption = "Right",
    MultipleOptions = false,
    Flag = "GN_NotificationAlignment",
    Callback = function(Option)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateSlider({
    Name = "X偏移",
    Range = {-1, 1},
    Increment = 0.01,
    Suffix = "",
    CurrentValue = 0,
    Flag = "GN_NotificationOffset_X",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateSlider({
    Name = "Y偏移",
    Range = {-1, 1},
    Increment = 0.01,
    Suffix = "",
    CurrentValue = 0,
    Flag = "GN_NotificationOffset_Y",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateSlider({
    Name = "大小乘数",
    Range = {0.8, 3},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 1,
    Flag = "GN_NotificationDPISize",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateButton({
    Name = "测试通知",
    Callback = function()
        -- 回调函数
    end
})

-- 防怪标签页 - Self
local ExploitSelfSection = ExploitTab:CreateSection("Self", true)

ExploitSelfSection:CreateToggle({
    Name = "总是开启跳跃",
    CurrentValue = false,
    Flag = "ES_AlwaysJump",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateDivider()

ExploitSelfSection:CreateToggle({
    Name = "防苍蝇蛋",
    CurrentValue = false,
    Flag = "ES_AntiGloombat",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反抱脸虫",
    CurrentValue = false,
    Flag = "ES_AntiGiggle",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反地刺",
    CurrentValue = false,
    Flag = "ES_AntiSnare",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反假门",
    CurrentValue = false,
    Flag = "ES_AntiDupe",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反Eyes",
    CurrentValue = false,
    Flag = "ES_AntiEyes",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反Lookman",
    CurrentValue = false,
    Flag = "ES_AntiLookman",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反Seek掉的灯",
    CurrentValue = false,
    Flag = "ES_AntiChanedlier",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反Seek触手",
    CurrentValue = false,
    Flag = "ES_AntiSeekArms",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 防怪标签页 - Bypass
local ExploitBypassSection = ExploitTab:CreateSection("Bypass", true)

ExploitBypassSection:CreateToggle({
    Name = "始终假蹲",
    CurrentValue = false,
    Flag = "EB_CrouchSpoof",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitBypassSection:CreateToggle({
    Name = "速度绕过",
    CurrentValue = false,
    Flag = "EB_SpeedBypass",
    Callback = function(Value)
        -- 回调函数
    end
})

local EB_ACManipulateToggle = ExploitBypassSection:CreateToggle({
    Name = "反作弊操纵",
    CurrentValue = false,
    Flag = "EB_ACManipulate",
    Callback = function(Value)
        -- 回调函数
    end
})
EB_ACManipulateToggle:CreateKeybind({
    Name = "Anti-Cheat Manipulate",
    CurrentKeybind = "T",
    HoldToInteract = true,
    Flag = "EB_ACManipulate_K",
    Callback = function(Key)
        -- 按键回调
    end
})

-- 防怪标签页 - Removals
local ExploitRemovalsSection = ExploitTab:CreateSection("Removals", true)

ExploitRemovalsSection:CreateToggle({
    Name = "移除Seek",
    CurrentValue = false,
    Flag = "ER_RemoveSeek",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateToggle({
    Name = "无Screech",
    CurrentValue = false,
    Flag = "ER_NoScreech",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateToggle({
    Name = "无A-90",
    CurrentValue = false,
    Flag = "ER_NoA90",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateToggle({
    Name = "无Halt",
    CurrentValue = false,
    Flag = "ER_NoShade",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateDivider()

ExploitRemovalsSection:CreateToggle({
    Name = "无A-90伤害",
    CurrentValue = false,
    Flag = "ER_NoA90Damage",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateToggle({
    Name = "无Screech伤害",
    CurrentValue = false,
    Flag = "ER_NoScreechDamage",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateToggle({
    Name = "无Halt伤害",
    CurrentValue = false,
    Flag = "ER_NoShadeDamage",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 透视标签页 - Entities
local ESPEntitiesSection = ESPTab:CreateSection("Entities", true)

ESPEntitiesSection:CreateToggle({
    Name = "启用",
    CurrentValue = false,
    Flag = "ESPE_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPEntitiesSection:CreateDivider()

ESPEntitiesSection:CreateToggle({
    Name = "名字",
    CurrentValue = false,
    Flag = "ESPE_Name",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPEntitiesSection:CreateToggle({
    Name = "距离",
    CurrentValue = false,
    Flag = "ESPE_Distance",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPEntitiesSection:CreateToggle({
    Name = "突出显示填充",
    CurrentValue = false,
    Flag = "ESPE_Fill",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPEntitiesSection:CreateToggle({
    Name = "突出显示大纲",
    CurrentValue = false,
    Flag = "ESPE_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 透视标签页 - Players
local ESPPlayersSection = ESPTab:CreateSection("Players", true)

ESPPlayersSection:CreateToggle({
    Name = "启用",
    CurrentValue = false,
    Flag = "ESPP_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPPlayersSection:CreateDivider()

ESPPlayersSection:CreateToggle({
    Name = "名字",
    CurrentValue = false,
    Flag = "ESPP_Name",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPPlayersSection:CreateToggle({
    Name = "距离",
    CurrentValue = false,
    Flag = "ESPP_Distance",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPPlayersSection:CreateToggle({
    Name = "突出显示填充",
    CurrentValue = false,
    Flag = "ESPP_Fill",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPPlayersSection:CreateToggle({
    Name = "突出显示大纲",
    CurrentValue = false,
    Flag = "ESPP_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 透视标签页 - Interactables (Main)
local ESPInteractablesTabbox = ESPTab:CreateTabbox("Interactables")
local ESPInteractablesMainTab = ESPInteractablesTabbox:CreateTab("Main")

local ESPInteractablesMainSection = ESPInteractablesMainTab:CreateSection("Main", true)

ESPInteractablesMainSection:CreateToggle({
    Name = "启用",
    CurrentValue = false,
    Flag = "ESPI_M_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPInteractablesMainSection:CreateDivider()

ESPInteractablesMainSection:CreateToggle({
    Name = "名字",
    CurrentValue = false,
    Flag = "ESPI_M_Name",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPInteractablesMainSection:CreateToggle({
    Name = "距离",
    CurrentValue = false,
    Flag = "ESPI_M_Distance",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPInteractablesMainSection:CreateToggle({
    Name = "突出显示填充",
    CurrentValue = false,
    Flag = "ESPI_M_Fill",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPInteractablesMainSection:CreateToggle({
    Name = "突出显示大纲",
    CurrentValue = false,
    Flag = "ESPI_M_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 透视标签页 - Interactables (Configurate)
local ESPInteractablesConfigurateTab = ESPInteractablesTabbox:CreateTab("Configurate")

local ESPInteractablesConfigurateSection = ESPInteractablesConfigurateTab:CreateSection("Configurate", true)

local ESPI_C_DoorsToggle = ESPInteractablesConfigurateSection:CreateToggle({
    Name = "门",
    CurrentValue = false,
    Flag = "ESPI_C_Doors",
    Callback = function(Value)
        -- 回调函数
    end
})
ESPI_C_DoorsToggle:CreateColorPicker({
    Name = "文本颜色",
    Color = Color3.new(1, 1, 1),
    Flag = "ESPI_C_Doors_F",
    Callback = function(Color)
        -- 回调函数
    end
})
ESPI_C_DoorsToggle:CreateColorPicker({
    Name = "轮廓颜色",
    Color = Color3.new(1, 1, 1),
    Flag = "ESPI_C_Doors_O",
    Callback = function(Color)
        -- 回调函数
    end
})

-- 视觉效果标签页 - View
local VisualsViewSection = VisualsTab:CreateSection("View", true)

VisualsViewSection:CreateSlider({
    Name = "视角",
    Range = {0, 120},
    Increment = 1,
    Suffix = "度",
    CurrentValue = 0,
    Flag = "VV_FieldOfView",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateToggle({
    Name = "无相机抖动",
    CurrentValue = false,
    Flag = "VV_NoCamShake",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateToggle({
    Name = "无相机晃动",
    CurrentValue = false,
    Flag = "VV_NoLookBob",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateDivider()

local VV_ThirdpersonToggle = VisualsViewSection:CreateToggle({
    Name = "第三人称",
    CurrentValue = false,
    Flag = "VV_Thirdperson",
    Callback = function(Value)
        -- 回调函数
    end
})
VV_ThirdpersonToggle:CreateKeybind({
    Name = "Thirdperson",
    CurrentKeybind = "V",
    HoldToInteract = false,
    Flag = "VV_Thirdperson_K",
    Callback = function(Key)
        -- 按键回调
    end
})

VisualsViewSection:CreateToggle({
    Name = "墙检测",
    CurrentValue = false,
    Flag = "VV_ThirdpersonCamCollision",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "距离",
    Range = {5, 30},
    Increment = 1,
    Suffix = "单位",
    CurrentValue = 10,
    Flag = "VV_ThirdpersonDistance",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "偏移",
    Range = {-5, 5},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 0,
    Flag = "VV_ThirdpersonOffset",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "垂直偏移",
    Range = {-5, 5},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 0,
    Flag = "VV_ThirdpersonOffsetUp",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateDivider()

VisualsViewSection:CreateToggle({
    Name = "显示模型便宜",
    CurrentValue = false,
    Flag = "VV_ViewmodelOffset",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "X",
    Range = {-5, 5},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 0,
    Flag = "VV_ViewmodelOffset_X",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "Y",
    Range = {-5, 5},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 0,
    Flag = "VV_ViewmodelOffset_Y",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "Z",
    Range = {-5, 5},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 0,
    Flag = "VV_ViewmodelOffset_Z",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 视觉效果标签页 - 世界
local VisualsWorldSection = VisualsTab:CreateSection("世界", true)

local VW_AmbienceToggle = VisualsWorldSection:CreateToggle({
    Name = "高亮",
    CurrentValue = false,
    Flag = "VW_Ambience",
    Callback = function(Value)
        -- 回调函数
    end
})
VW_AmbienceToggle:CreateColorPicker({
    Name = "Ambience Color",
    Color = Color3.new(1, 1, 1),
    Flag = "VW_Ambience_C",
    Callback = function(Color)
        -- 回调函数
    end
})

VisualsWorldSection:CreateToggle({
    Name = "移除雾",
    CurrentValue = false,
    Flag = "VW_NoFog",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsWorldSection:CreateDivider()

VisualsWorldSection:CreateToggle({
    Name = "显示Rush/Ambush路径点",
    CurrentValue = false,
    Flag = "VW_RushNodes",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 视觉效果标签页 - 移除
local VisualsRemovalsSection = VisualsTab:CreateSection("移除", true)

VisualsRemovalsSection:CreateToggle({
    Name = "无Haste效果",
    CurrentValue = false,
    Flag = "VR_NoHasteEffect",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "没有hide晕影",
    CurrentValue = false,
    Flag = "VR_NoHidingVignette",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "无halt效果",
    CurrentValue = false,
    Flag = "VR_NoHaltEffect",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "无复活过场动画",
    CurrentValue = false,
    Flag = "VR_NoReviveCutscene",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateDivider()

VisualsRemovalsSection:CreateToggle({
    Name = "移除Timothy跳脸",
    CurrentValue = false,
    Flag = "VR_TimothyJumpscare",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "移除Glitch跳脸",
    CurrentValue = false,
    Flag = "VR_NoGlitchJumpscare",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "移除Void跳脸",
    CurrentValue = false,
    Flag = "VR_NoVoidEffect",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "移除Seek房间效果",
    CurrentValue = false,
    Flag = "VR_NoSeekEffects",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 杂项标签页 - Movement
local MiscMovementSection = MiscTab:CreateSection("Movement", true)

MiscMovementSection:CreateToggle({
    Name = "启用速度修饰符",
    CurrentValue = false,
    Flag = "MM_Walkspeed",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscMovementSection:CreateSlider({
    Name = "步行速度",
    Range = {10, 50},
    Increment = 1,
    Suffix = "单位",
    CurrentValue = 20,
    Flag = "MM_Walkspeed_S",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscMovementSection:CreateSlider({
    Name = "梯子速度提升",
    Range = {0, 50},
    Increment = 1,
    Suffix = "单位",
    CurrentValue = 0,
    Flag = "MM_Walkspeed_Boost",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscMovementSection:CreateDivider()

MiscMovementSection:CreateToggle({
    Name = "没有加速",
    CurrentValue = false,
    Flag = "MM_NoAcceleration",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 杂项标签页 - Audio
local MiscAudioSection = MiscTab:CreateSection("Audio", true)

MiscAudioSection:CreateToggle({
    Name = "静音干扰修改器",
    CurrentValue = false,
    Flag = "MA_SilentJammin",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscAudioSection:CreateDivider()

MiscAudioSection:CreateToggle({
    Name = "没有匆忙的声音",
    CurrentValue = false,
    Flag = "MA_NoHasteSound",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscAudioSection:CreateToggle({
    Name = "没有交互声",
    CurrentValue = false,
    Flag = "MA_SilentInteracting",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscAudioSection:CreateToggle({
    Name = "没有随机的氛围",
    CurrentValue = false,
    Flag = "MA_NoRandomAmbience",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscAudioSection:CreateToggle({
    Name = "沉默的苍蝇",
    CurrentValue = false,
    Flag = "MA_SilentGloombat",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 杂项标签页 - Other
local MiscellaneousOtherSection = MiscTab:CreateSection("Other", true)

MiscellaneousOtherSection:CreateToggle({
    Name = "没有Roblox Void",
    CurrentValue = false,
    Flag = "MO_antirobloxvoid",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscellaneousOtherSection:CreateDivider()

MiscellaneousOtherSection:CreateButton({
    Name = "Play Again",
    Callback = function()
        -- 回调函数
    end
})

MiscellaneousOtherSection:CreateButton({
    Name = "Lobby",
    Callback = function()
        -- 回调函数
    end
})

MiscellaneousOtherSection:CreateButton({
    Name = "Revive",
    Callback = function()
        -- 回调函数
    end
})

-- 配置标签页
local ConfigSection = ConfigTab:CreateSection("设置", true)

ConfigSection:CreateButton({
    Name = "保存配置",
    Callback = function()
        -- 回调函数
    end
})

ConfigSection:CreateButton({
    Name = "加载配置",
    Callback = function()
        -- 回调函数
    end
})

-- 加载UI
Rayfield:LoadConfiguration()local Rayfield = loadstring(game:HttpGet("https://gitee.com/roblox-smk/rayfield/raw/master/Rayfield"))()
local LocalPlayer = game.Players.LocalPlayer

local Window = Rayfield:CreateWindow({
    Name = "LOLHAX | "..LocalPlayer.Name,
    Icon = 0,
    LoadingTitle = "加载中",
    LoadingSubtitle = "LX脚本",
    Theme = "Default",
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,
    ConfigurationSaving = {
        Enabled = false,
        FolderName = nil,
        FileName = ""
    },
    Discord = {
        Enabled = false,
        Invite = "",
        RememberJoins = true
    },
    KeySystem = false,
    KeySettings = {
        Title = "",
        Subtitle = "",
        Note = "",
        FileName = "",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {""}
    }
})

-- 创建标签页
local GeneralTab = Window:CreateTab("主要功能")
local ExploitTab = Window:CreateTab("防怪")
local ESPTab = Window:CreateTab("透视")
local VisualsTab = Window:CreateTab("视觉效果")
local MiscTab = Window:CreateTab("杂项")
local ConfigTab = Window:CreateTab("配置")

-- 主要功能标签页
local GeneralAutomationSection = GeneralTab:CreateSection("Automation", true)

local GA_AutoInteractToggle = GeneralAutomationSection:CreateToggle({
    Name = "自动互动",
    CurrentValue = false,
    Flag = "GA_AutoInteract",
    Callback = function(Value)
        -- 回调函数
    end
})
GA_AutoInteractToggle:CreateKeybind({
    Name = "自动交互",
    CurrentKeybind = "R",
    HoldToInteract = true,
    Flag = "GA_AutoInteract_K",
    Callback = function(Key)
        -- 按键回调
    end
})

GeneralAutomationSection:CreateDropdown({
    Name = "自动交互选项",
    Options = {"Use Lockpick ( Doors )", "Use Lockpick ( Other )", "Ignore Light Sources", "Ignore Can-Die"},
    CurrentOption = {},
    MultipleOptions = true,
    Flag = "GA_AutoInteract_Options",
    Callback = function(Options)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateSlider({
    Name = "交互范围",
    Range = {1, 2},
    Increment = 1,
    Suffix = "单位",
    CurrentValue = 1,
    Flag = "GA_AutoInteract_Range",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateDivider()

local GA_EatCandiesToggle = GeneralAutomationSection:CreateToggle({
    Name = "自动吃糖果",
    CurrentValue = false,
    Flag = "GA_EatCandies",
    Callback = function(Value)
        -- 回调函数
    end
})
GA_EatCandiesToggle:CreateKeybind({
    Name = "自动使用糖果",
    CurrentKeybind = "V",
    HoldToInteract = true,
    Flag = "GA_EatCandies_K",
    Callback = function(Key)
        -- 按键回调
    end
})

GeneralAutomationSection:CreateToggle({
    Name = "自动隐藏",
    CurrentValue = false,
    Flag = "GA_AutoHide",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateToggle({
    Name = "预测可见检查",
    CurrentValue = false,
    Flag = "GA_AutoHide_VisCheck",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateSlider({
    Name = "预测时间",
    Range = {0.1, 1.5},
    Increment = 0.01,
    Suffix = "秒",
    CurrentValue = 0.5,
    Flag = "GA_AutoHide_PredictionTime",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateSlider({
    Name = "距离",
    Range = {0.8, 1.5},
    Increment = 0.1,
    Suffix = "倍",
    CurrentValue = 1,
    Flag = "GA_AutoHide_PredictionDistanceMultiplier",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateDivider()

local GA_MinecartInteractToggle = GeneralAutomationSection:CreateToggle({
    Name = "循环互动矿车",
    CurrentValue = false,
    Flag = "GA_MinecartInteract",
    Callback = function(Value)
        -- 回调函数
    end
})
GA_MinecartInteractToggle:CreateKeybind({
    Name = "矿车互动",
    CurrentKeybind = "H",
    HoldToInteract = true,
    Flag = "GA_MinecartInteract_K",
    Callback = function(Key)
        -- 按键回调
    end
})

GeneralAutomationSection:CreateToggle({
    Name = "自动解电器房",
    CurrentValue = false,
    Flag = "GA_AnchorAutoSolve",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateDivider()

GeneralAutomationSection:CreateToggle({
    Name = "自动解图书馆",
    CurrentValue = false,
    Flag = "GA_AutoPadlockSolve",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateSlider({
    Name = "自动开锁距离",
    Range = {10, 50},
    Increment = 1,
    Suffix = "单位",
    CurrentValue = 25,
    Flag = "GA_AutoPadlockSolve_Distance",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 主要功能标签页 - Notifying
local GeneralNotifyingSection = GeneralTab:CreateSection("Notifying", true)

GeneralNotifyingSection:CreateToggle({
    Name = "启用",
    CurrentValue = false,
    Flag = "GN_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateToggle({
    Name = "播放声音",
    CurrentValue = false,
    Flag = "GN_NotificationSound",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateSlider({
    Name = "音量",
    Range = {1, 10},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 2,
    Flag = "GN_NotificationSound_Volume",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateDivider()

GeneralNotifyingSection:CreateToggle({
    Name = "锁的密码",
    CurrentValue = false,
    Flag = "GN_AnchorCode",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateToggle({
    Name = "自动出图书馆锁密码",
    CurrentValue = false,
    Flag = "GN_PadlockCode",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateToggle({
    Name = "实体通知",
    CurrentValue = false,
    Flag = "GN_Entities",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateDropdown({
    Name = "实体列表",
    Options = {"Rush", "Blitz", "Ambush", "Eyes", "Lookman", "Halt", "Screech", "Gloombat Swarm", "Dread", "A-60", "A-120"},
    CurrentOption = {},
    MultipleOptions = true,
    Flag = "GN_Entities_Options",
    Callback = function(Options)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateDivider()

GeneralNotifyingSection:CreateDropdown({
    Name = "水平对齐",
    Options = {"Left", "Center", "Right"},
    CurrentOption = "Right",
    MultipleOptions = false,
    Flag = "GN_NotificationAlignment",
    Callback = function(Option)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateSlider({
    Name = "X偏移",
    Range = {-1, 1},
    Increment = 0.01,
    Suffix = "",
    CurrentValue = 0,
    Flag = "GN_NotificationOffset_X",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateSlider({
    Name = "Y偏移",
    Range = {-1, 1},
    Increment = 0.01,
    Suffix = "",
    CurrentValue = 0,
    Flag = "GN_NotificationOffset_Y",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateSlider({
    Name = "大小乘数",
    Range = {0.8, 3},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 1,
    Flag = "GN_NotificationDPISize",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateButton({
    Name = "测试通知",
    Callback = function()
        -- 回调函数
    end
})

-- 防怪标签页 - Self
local ExploitSelfSection = ExploitTab:CreateSection("Self", true)

ExploitSelfSection:CreateToggle({
    Name = "总是开启跳跃",
    CurrentValue = false,
    Flag = "ES_AlwaysJump",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateDivider()

ExploitSelfSection:CreateToggle({
    Name = "防苍蝇蛋",
    CurrentValue = false,
    Flag = "ES_AntiGloombat",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反抱脸虫",
    CurrentValue = false,
    Flag = "ES_AntiGiggle",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反地刺",
    CurrentValue = false,
    Flag = "ES_AntiSnare",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反假门",
    CurrentValue = false,
    Flag = "ES_AntiDupe",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反Eyes",
    CurrentValue = false,
    Flag = "ES_AntiEyes",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反Lookman",
    CurrentValue = false,
    Flag = "ES_AntiLookman",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反Seek掉的灯",
    CurrentValue = false,
    Flag = "ES_AntiChanedlier",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反Seek触手",
    CurrentValue = false,
    Flag = "ES_AntiSeekArms",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 防怪标签页 - Bypass
local ExploitBypassSection = ExploitTab:CreateSection("Bypass", true)

ExploitBypassSection:CreateToggle({
    Name = "始终假蹲",
    CurrentValue = false,
    Flag = "EB_CrouchSpoof",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitBypassSection:CreateToggle({
    Name = "速度绕过",
    CurrentValue = false,
    Flag = "EB_SpeedBypass",
    Callback = function(Value)
        -- 回调函数
    end
})

local EB_ACManipulateToggle = ExploitBypassSection:CreateToggle({
    Name = "反作弊操纵",
    CurrentValue = false,
    Flag = "EB_ACManipulate",
    Callback = function(Value)
        -- 回调函数
    end
})
EB_ACManipulateToggle:CreateKeybind({
    Name = "Anti-Cheat Manipulate",
    CurrentKeybind = "T",
    HoldToInteract = true,
    Flag = "EB_ACManipulate_K",
    Callback = function(Key)
        -- 按键回调
    end
})

-- 防怪标签页 - Removals
local ExploitRemovalsSection = ExploitTab:CreateSection("Removals", true)

ExploitRemovalsSection:CreateToggle({
    Name = "移除Seek",
    CurrentValue = false,
    Flag = "ER_RemoveSeek",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateToggle({
    Name = "无Screech",
    CurrentValue = false,
    Flag = "ER_NoScreech",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateToggle({
    Name = "无A-90",
    CurrentValue = false,
    Flag = "ER_NoA90",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateToggle({
    Name = "无Halt",
    CurrentValue = false,
    Flag = "ER_NoShade",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateDivider()

ExploitRemovalsSection:CreateToggle({
    Name = "无A-90伤害",
    CurrentValue = false,
    Flag = "ER_NoA90Damage",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateToggle({
    Name = "无Screech伤害",
    CurrentValue = false,
    Flag = "ER_NoScreechDamage",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateToggle({
    Name = "无Halt伤害",
    CurrentValue = false,
    Flag = "ER_NoShadeDamage",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 透视标签页 - Entities
local ESPEntitiesSection = ESPTab:CreateSection("Entities", true)

ESPEntitiesSection:CreateToggle({
    Name = "启用",
    CurrentValue = false,
    Flag = "ESPE_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPEntitiesSection:CreateDivider()

ESPEntitiesSection:CreateToggle({
    Name = "名字",
    CurrentValue = false,
    Flag = "ESPE_Name",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPEntitiesSection:CreateToggle({
    Name = "距离",
    CurrentValue = false,
    Flag = "ESPE_Distance",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPEntitiesSection:CreateToggle({
    Name = "突出显示填充",
    CurrentValue = false,
    Flag = "ESPE_Fill",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPEntitiesSection:CreateToggle({
    Name = "突出显示大纲",
    CurrentValue = false,
    Flag = "ESPE_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 透视标签页 - Players
local ESPPlayersSection = ESPTab:CreateSection("Players", true)

ESPPlayersSection:CreateToggle({
    Name = "启用",
    CurrentValue = false,
    Flag = "ESPP_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPPlayersSection:CreateDivider()

ESPPlayersSection:CreateToggle({
    Name = "名字",
    CurrentValue = false,
    Flag = "ESPP_Name",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPPlayersSection:CreateToggle({
    Name = "距离",
    CurrentValue = false,
    Flag = "ESPP_Distance",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPPlayersSection:CreateToggle({
    Name = "突出显示填充",
    CurrentValue = false,
    Flag = "ESPP_Fill",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPPlayersSection:CreateToggle({
    Name = "突出显示大纲",
    CurrentValue = false,
    Flag = "ESPP_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 透视标签页 - Interactables (Main)
local ESPInteractablesTabbox = ESPTab:CreateTabbox("Interactables")
local ESPInteractablesMainTab = ESPInteractablesTabbox:CreateTab("Main")

local ESPInteractablesMainSection = ESPInteractablesMainTab:CreateSection("Main", true)

ESPInteractablesMainSection:CreateToggle({
    Name = "启用",
    CurrentValue = false,
    Flag = "ESPI_M_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPInteractablesMainSection:CreateDivider()

ESPInteractablesMainSection:CreateToggle({
    Name = "名字",
    CurrentValue = false,
    Flag = "ESPI_M_Name",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPInteractablesMainSection:CreateToggle({
    Name = "距离",
    CurrentValue = false,
    Flag = "ESPI_M_Distance",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPInteractablesMainSection:CreateToggle({
    Name = "突出显示填充",
    CurrentValue = false,
    Flag = "ESPI_M_Fill",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPInteractablesMainSection:CreateToggle({
    Name = "突出显示大纲",
    CurrentValue = false,
    Flag = "ESPI_M_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 透视标签页 - Interactables (Configurate)
local ESPInteractablesConfigurateTab = ESPInteractablesTabbox:CreateTab("Configurate")

local ESPInteractablesConfigurateSection = ESPInteractablesConfigurateTab:CreateSection("Configurate", true)

local ESPI_C_DoorsToggle = ESPInteractablesConfigurateSection:CreateToggle({
    Name = "门",
    CurrentValue = false,
    Flag = "ESPI_C_Doors",
    Callback = function(Value)
        -- 回调函数
    end
})
ESPI_C_DoorsToggle:CreateColorPicker({
    Name = "文本颜色",
    Color = Color3.new(1, 1, 1),
    Flag = "ESPI_C_Doors_F",
    Callback = function(Color)
        -- 回调函数
    end
})
ESPI_C_DoorsToggle:CreateColorPicker({
    Name = "轮廓颜色",
    Color = Color3.new(1, 1, 1),
    Flag = "ESPI_C_Doors_O",
    Callback = function(Color)
        -- 回调函数
    end
})

-- 视觉效果标签页 - View
local VisualsViewSection = VisualsTab:CreateSection("View", true)

VisualsViewSection:CreateSlider({
    Name = "视角",
    Range = {0, 120},
    Increment = 1,
    Suffix = "度",
    CurrentValue = 0,
    Flag = "VV_FieldOfView",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateToggle({
    Name = "无相机抖动",
    CurrentValue = false,
    Flag = "VV_NoCamShake",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateToggle({
    Name = "无相机晃动",
    CurrentValue = false,
    Flag = "VV_NoLookBob",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateDivider()

local VV_ThirdpersonToggle = VisualsViewSection:CreateToggle({
    Name = "第三人称",
    CurrentValue = false,
    Flag = "VV_Thirdperson",
    Callback = function(Value)
        -- 回调函数
    end
})
VV_ThirdpersonToggle:CreateKeybind({
    Name = "Thirdperson",
    CurrentKeybind = "V",
    HoldToInteract = false,
    Flag = "VV_Thirdperson_K",
    Callback = function(Key)
        -- 按键回调
    end
})

VisualsViewSection:CreateToggle({
    Name = "墙检测",
    CurrentValue = false,
    Flag = "VV_ThirdpersonCamCollision",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "距离",
    Range = {5, 30},
    Increment = 1,
    Suffix = "单位",
    CurrentValue = 10,
    Flag = "VV_ThirdpersonDistance",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "偏移",
    Range = {-5, 5},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 0,
    Flag = "VV_ThirdpersonOffset",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "垂直偏移",
    Range = {-5, 5},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 0,
    Flag = "VV_ThirdpersonOffsetUp",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateDivider()

VisualsViewSection:CreateToggle({
    Name = "显示模型便宜",
    CurrentValue = false,
    Flag = "VV_ViewmodelOffset",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "X",
    Range = {-5, 5},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 0,
    Flag = "VV_ViewmodelOffset_X",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "Y",
    Range = {-5, 5},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 0,
    Flag = "VV_ViewmodelOffset_Y",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "Z",
    Range = {-5, 5},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 0,
    Flag = "VV_ViewmodelOffset_Z",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 视觉效果标签页 - 世界
local VisualsWorldSection = VisualsTab:CreateSection("世界", true)

local VW_AmbienceToggle = VisualsWorldSection:CreateToggle({
    Name = "高亮",
    CurrentValue = false,
    Flag = "VW_Ambience",
    Callback = function(Value)
        -- 回调函数
    end
})
VW_AmbienceToggle:CreateColorPicker({
    Name = "Ambience Color",
    Color = Color3.new(1, 1, 1),
    Flag = "VW_Ambience_C",
    Callback = function(Color)
        -- 回调函数
    end
})

VisualsWorldSection:CreateToggle({
    Name = "移除雾",
    CurrentValue = false,
    Flag = "VW_NoFog",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsWorldSection:CreateDivider()

VisualsWorldSection:CreateToggle({
    Name = "显示Rush/Ambush路径点",
    CurrentValue = false,
    Flag = "VW_RushNodes",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 视觉效果标签页 - 移除
local VisualsRemovalsSection = VisualsTab:CreateSection("移除", true)

VisualsRemovalsSection:CreateToggle({
    Name = "无Haste效果",
    CurrentValue = false,
    Flag = "VR_NoHasteEffect",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "没有hide晕影",
    CurrentValue = false,
    Flag = "VR_NoHidingVignette",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "无halt效果",
    CurrentValue = false,
    Flag = "VR_NoHaltEffect",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "无复活过场动画",
    CurrentValue = false,
    Flag = "VR_NoReviveCutscene",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateDivider()

VisualsRemovalsSection:CreateToggle({
    Name = "移除Timothy跳脸",
    CurrentValue = false,
    Flag = "VR_TimothyJumpscare",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "移除Glitch跳脸",
    CurrentValue = false,
    Flag = "VR_NoGlitchJumpscare",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "移除Void跳脸",
    CurrentValue = false,
    Flag = "VR_NoVoidEffect",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "移除Seek房间效果",
    CurrentValue = false,
    Flag = "VR_NoSeekEffects",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 杂项标签页 - Movement
local MiscMovementSection = MiscTab:CreateSection("Movement", true)

MiscMovementSection:CreateToggle({
    Name = "启用速度修饰符",
    CurrentValue = false,
    Flag = "MM_Walkspeed",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscMovementSection:CreateSlider({
    Name = "步行速度",
    Range = {10, 50},
    Increment = 1,
    Suffix = "单位",
    CurrentValue = 20,
    Flag = "MM_Walkspeed_S",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscMovementSection:CreateSlider({
    Name = "梯子速度提升",
    Range = {0, 50},
    Increment = 1,
    Suffix = "单位",
    CurrentValue = 0,
    Flag = "MM_Walkspeed_Boost",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscMovementSection:CreateDivider()

MiscMovementSection:CreateToggle({
    Name = "没有加速",
    CurrentValue = false,
    Flag = "MM_NoAcceleration",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 杂项标签页 - Audio
local MiscAudioSection = MiscTab:CreateSection("Audio", true)

MiscAudioSection:CreateToggle({
    Name = "静音干扰修改器",
    CurrentValue = false,
    Flag = "MA_SilentJammin",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscAudioSection:CreateDivider()

MiscAudioSection:CreateToggle({
    Name = "没有匆忙的声音",
    CurrentValue = false,
    Flag = "MA_NoHasteSound",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscAudioSection:CreateToggle({
    Name = "没有交互声",
    CurrentValue = false,
    Flag = "MA_SilentInteracting",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscAudioSection:CreateToggle({
    Name = "没有随机的氛围",
    CurrentValue = false,
    Flag = "MA_NoRandomAmbience",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscAudioSection:CreateToggle({
    Name = "沉默的苍蝇",
    CurrentValue = false,
    Flag = "MA_SilentGloombat",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 杂项标签页 - Other
local MiscellaneousOtherSection = MiscTab:CreateSection("Other", true)

MiscellaneousOtherSection:CreateToggle({
    Name = "没有Roblox Void",
    CurrentValue = false,
    Flag = "MO_antirobloxvoid",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscellaneousOtherSection:CreateDivider()

MiscellaneousOtherSection:CreateButton({
    Name = "Play Again",
    Callback = function()
        -- 回调函数
    end
})

MiscellaneousOtherSection:CreateButton({
    Name = "Lobby",
    Callback = function()
        -- 回调函数
    end
})

MiscellaneousOtherSection:CreateButton({
    Name = "Revive",
    Callback = function()
        -- 回调函数
    end
})

-- 配置标签页
local ConfigSection = ConfigTab:CreateSection("设置", true)

ConfigSection:CreateButton({
    Name = "保存配置",
    Callback = function()
        -- 回调函数
    end
})

ConfigSection:CreateButton({
    Name = "加载配置",
    Callback = function()
        -- 回调函数
    end
})

-- 加载UI
Rayfield:LoadConfiguration()local Rayfield = loadstring(game:HttpGet("https://gitee.com/roblox-smk/rayfield/raw/master/Rayfield"))()
local LocalPlayer = game.Players.LocalPlayer

local Window = Rayfield:CreateWindow({
    Name = "LOLHAX | "..LocalPlayer.Name,
    Icon = 0,
    LoadingTitle = "加载中",
    LoadingSubtitle = "LX脚本",
    Theme = "Default",
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,
    ConfigurationSaving = {
        Enabled = false,
        FolderName = nil,
        FileName = ""
    },
    Discord = {
        Enabled = false,
        Invite = "",
        RememberJoins = true
    },
    KeySystem = false,
    KeySettings = {
        Title = "",
        Subtitle = "",
        Note = "",
        FileName = "",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {""}
    }
})

-- 创建标签页
local GeneralTab = Window:CreateTab("主要功能")
local ExploitTab = Window:CreateTab("防怪")
local ESPTab = Window:CreateTab("透视")
local VisualsTab = Window:CreateTab("视觉效果")
local MiscTab = Window:CreateTab("杂项")
local ConfigTab = Window:CreateTab("配置")

-- 主要功能标签页
local GeneralAutomationSection = GeneralTab:CreateSection("Automation", true)

local GA_AutoInteractToggle = GeneralAutomationSection:CreateToggle({
    Name = "自动互动",
    CurrentValue = false,
    Flag = "GA_AutoInteract",
    Callback = function(Value)
        -- 回调函数
    end
})
GA_AutoInteractToggle:CreateKeybind({
    Name = "自动交互",
    CurrentKeybind = "R",
    HoldToInteract = true,
    Flag = "GA_AutoInteract_K",
    Callback = function(Key)
        -- 按键回调
    end
})

GeneralAutomationSection:CreateDropdown({
    Name = "自动交互选项",
    Options = {"Use Lockpick ( Doors )", "Use Lockpick ( Other )", "Ignore Light Sources", "Ignore Can-Die"},
    CurrentOption = {},
    MultipleOptions = true,
    Flag = "GA_AutoInteract_Options",
    Callback = function(Options)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateSlider({
    Name = "交互范围",
    Range = {1, 2},
    Increment = 1,
    Suffix = "单位",
    CurrentValue = 1,
    Flag = "GA_AutoInteract_Range",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateDivider()

local GA_EatCandiesToggle = GeneralAutomationSection:CreateToggle({
    Name = "自动吃糖果",
    CurrentValue = false,
    Flag = "GA_EatCandies",
    Callback = function(Value)
        -- 回调函数
    end
})
GA_EatCandiesToggle:CreateKeybind({
    Name = "自动使用糖果",
    CurrentKeybind = "V",
    HoldToInteract = true,
    Flag = "GA_EatCandies_K",
    Callback = function(Key)
        -- 按键回调
    end
})

GeneralAutomationSection:CreateToggle({
    Name = "自动隐藏",
    CurrentValue = false,
    Flag = "GA_AutoHide",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateToggle({
    Name = "预测可见检查",
    CurrentValue = false,
    Flag = "GA_AutoHide_VisCheck",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateSlider({
    Name = "预测时间",
    Range = {0.1, 1.5},
    Increment = 0.01,
    Suffix = "秒",
    CurrentValue = 0.5,
    Flag = "GA_AutoHide_PredictionTime",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateSlider({
    Name = "距离",
    Range = {0.8, 1.5},
    Increment = 0.1,
    Suffix = "倍",
    CurrentValue = 1,
    Flag = "GA_AutoHide_PredictionDistanceMultiplier",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateDivider()

local GA_MinecartInteractToggle = GeneralAutomationSection:CreateToggle({
    Name = "循环互动矿车",
    CurrentValue = false,
    Flag = "GA_MinecartInteract",
    Callback = function(Value)
        -- 回调函数
    end
})
GA_MinecartInteractToggle:CreateKeybind({
    Name = "矿车互动",
    CurrentKeybind = "H",
    HoldToInteract = true,
    Flag = "GA_MinecartInteract_K",
    Callback = function(Key)
        -- 按键回调
    end
})

GeneralAutomationSection:CreateToggle({
    Name = "自动解电器房",
    CurrentValue = false,
    Flag = "GA_AnchorAutoSolve",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateDivider()

GeneralAutomationSection:CreateToggle({
    Name = "自动解图书馆",
    CurrentValue = false,
    Flag = "GA_AutoPadlockSolve",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateSlider({
    Name = "自动开锁距离",
    Range = {10, 50},
    Increment = 1,
    Suffix = "单位",
    CurrentValue = 25,
    Flag = "GA_AutoPadlockSolve_Distance",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 主要功能标签页 - Notifying
local GeneralNotifyingSection = GeneralTab:CreateSection("Notifying", true)

GeneralNotifyingSection:CreateToggle({
    Name = "启用",
    CurrentValue = false,
    Flag = "GN_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateToggle({
    Name = "播放声音",
    CurrentValue = false,
    Flag = "GN_NotificationSound",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateSlider({
    Name = "音量",
    Range = {1, 10},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 2,
    Flag = "GN_NotificationSound_Volume",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateDivider()

GeneralNotifyingSection:CreateToggle({
    Name = "锁的密码",
    CurrentValue = false,
    Flag = "GN_AnchorCode",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateToggle({
    Name = "自动出图书馆锁密码",
    CurrentValue = false,
    Flag = "GN_PadlockCode",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateToggle({
    Name = "实体通知",
    CurrentValue = false,
    Flag = "GN_Entities",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateDropdown({
    Name = "实体列表",
    Options = {"Rush", "Blitz", "Ambush", "Eyes", "Lookman", "Halt", "Screech", "Gloombat Swarm", "Dread", "A-60", "A-120"},
    CurrentOption = {},
    MultipleOptions = true,
    Flag = "GN_Entities_Options",
    Callback = function(Options)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateDivider()

GeneralNotifyingSection:CreateDropdown({
    Name = "水平对齐",
    Options = {"Left", "Center", "Right"},
    CurrentOption = "Right",
    MultipleOptions = false,
    Flag = "GN_NotificationAlignment",
    Callback = function(Option)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateSlider({
    Name = "X偏移",
    Range = {-1, 1},
    Increment = 0.01,
    Suffix = "",
    CurrentValue = 0,
    Flag = "GN_NotificationOffset_X",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateSlider({
    Name = "Y偏移",
    Range = {-1, 1},
    Increment = 0.01,
    Suffix = "",
    CurrentValue = 0,
    Flag = "GN_NotificationOffset_Y",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateSlider({
    Name = "大小乘数",
    Range = {0.8, 3},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 1,
    Flag = "GN_NotificationDPISize",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateButton({
    Name = "测试通知",
    Callback = function()
        -- 回调函数
    end
})

-- 防怪标签页 - Self
local ExploitSelfSection = ExploitTab:CreateSection("Self", true)

ExploitSelfSection:CreateToggle({
    Name = "总是开启跳跃",
    CurrentValue = false,
    Flag = "ES_AlwaysJump",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateDivider()

ExploitSelfSection:CreateToggle({
    Name = "防苍蝇蛋",
    CurrentValue = false,
    Flag = "ES_AntiGloombat",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反抱脸虫",
    CurrentValue = false,
    Flag = "ES_AntiGiggle",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反地刺",
    CurrentValue = false,
    Flag = "ES_AntiSnare",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反假门",
    CurrentValue = false,
    Flag = "ES_AntiDupe",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反Eyes",
    CurrentValue = false,
    Flag = "ES_AntiEyes",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反Lookman",
    CurrentValue = false,
    Flag = "ES_AntiLookman",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反Seek掉的灯",
    CurrentValue = false,
    Flag = "ES_AntiChanedlier",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反Seek触手",
    CurrentValue = false,
    Flag = "ES_AntiSeekArms",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 防怪标签页 - Bypass
local ExploitBypassSection = ExploitTab:CreateSection("Bypass", true)

ExploitBypassSection:CreateToggle({
    Name = "始终假蹲",
    CurrentValue = false,
    Flag = "EB_CrouchSpoof",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitBypassSection:CreateToggle({
    Name = "速度绕过",
    CurrentValue = false,
    Flag = "EB_SpeedBypass",
    Callback = function(Value)
        -- 回调函数
    end
})

local EB_ACManipulateToggle = ExploitBypassSection:CreateToggle({
    Name = "反作弊操纵",
    CurrentValue = false,
    Flag = "EB_ACManipulate",
    Callback = function(Value)
        -- 回调函数
    end
})
EB_ACManipulateToggle:CreateKeybind({
    Name = "Anti-Cheat Manipulate",
    CurrentKeybind = "T",
    HoldToInteract = true,
    Flag = "EB_ACManipulate_K",
    Callback = function(Key)
        -- 按键回调
    end
})

-- 防怪标签页 - Removals
local ExploitRemovalsSection = ExploitTab:CreateSection("Removals", true)

ExploitRemovalsSection:CreateToggle({
    Name = "移除Seek",
    CurrentValue = false,
    Flag = "ER_RemoveSeek",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateToggle({
    Name = "无Screech",
    CurrentValue = false,
    Flag = "ER_NoScreech",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateToggle({
    Name = "无A-90",
    CurrentValue = false,
    Flag = "ER_NoA90",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateToggle({
    Name = "无Halt",
    CurrentValue = false,
    Flag = "ER_NoShade",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateDivider()

ExploitRemovalsSection:CreateToggle({
    Name = "无A-90伤害",
    CurrentValue = false,
    Flag = "ER_NoA90Damage",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateToggle({
    Name = "无Screech伤害",
    CurrentValue = false,
    Flag = "ER_NoScreechDamage",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateToggle({
    Name = "无Halt伤害",
    CurrentValue = false,
    Flag = "ER_NoShadeDamage",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 透视标签页 - Entities
local ESPEntitiesSection = ESPTab:CreateSection("Entities", true)

ESPEntitiesSection:CreateToggle({
    Name = "启用",
    CurrentValue = false,
    Flag = "ESPE_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPEntitiesSection:CreateDivider()

ESPEntitiesSection:CreateToggle({
    Name = "名字",
    CurrentValue = false,
    Flag = "ESPE_Name",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPEntitiesSection:CreateToggle({
    Name = "距离",
    CurrentValue = false,
    Flag = "ESPE_Distance",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPEntitiesSection:CreateToggle({
    Name = "突出显示填充",
    CurrentValue = false,
    Flag = "ESPE_Fill",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPEntitiesSection:CreateToggle({
    Name = "突出显示大纲",
    CurrentValue = false,
    Flag = "ESPE_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 透视标签页 - Players
local ESPPlayersSection = ESPTab:CreateSection("Players", true)

ESPPlayersSection:CreateToggle({
    Name = "启用",
    CurrentValue = false,
    Flag = "ESPP_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPPlayersSection:CreateDivider()

ESPPlayersSection:CreateToggle({
    Name = "名字",
    CurrentValue = false,
    Flag = "ESPP_Name",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPPlayersSection:CreateToggle({
    Name = "距离",
    CurrentValue = false,
    Flag = "ESPP_Distance",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPPlayersSection:CreateToggle({
    Name = "突出显示填充",
    CurrentValue = false,
    Flag = "ESPP_Fill",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPPlayersSection:CreateToggle({
    Name = "突出显示大纲",
    CurrentValue = false,
    Flag = "ESPP_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 透视标签页 - Interactables (Main)
local ESPInteractablesTabbox = ESPTab:CreateTabbox("Interactables")
local ESPInteractablesMainTab = ESPInteractablesTabbox:CreateTab("Main")

local ESPInteractablesMainSection = ESPInteractablesMainTab:CreateSection("Main", true)

ESPInteractablesMainSection:CreateToggle({
    Name = "启用",
    CurrentValue = false,
    Flag = "ESPI_M_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPInteractablesMainSection:CreateDivider()

ESPInteractablesMainSection:CreateToggle({
    Name = "名字",
    CurrentValue = false,
    Flag = "ESPI_M_Name",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPInteractablesMainSection:CreateToggle({
    Name = "距离",
    CurrentValue = false,
    Flag = "ESPI_M_Distance",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPInteractablesMainSection:CreateToggle({
    Name = "突出显示填充",
    CurrentValue = false,
    Flag = "ESPI_M_Fill",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPInteractablesMainSection:CreateToggle({
    Name = "突出显示大纲",
    CurrentValue = false,
    Flag = "ESPI_M_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 透视标签页 - Interactables (Configurate)
local ESPInteractablesConfigurateTab = ESPInteractablesTabbox:CreateTab("Configurate")

local ESPInteractablesConfigurateSection = ESPInteractablesConfigurateTab:CreateSection("Configurate", true)

local ESPI_C_DoorsToggle = ESPInteractablesConfigurateSection:CreateToggle({
    Name = "门",
    CurrentValue = false,
    Flag = "ESPI_C_Doors",
    Callback = function(Value)
        -- 回调函数
    end
})
ESPI_C_DoorsToggle:CreateColorPicker({
    Name = "文本颜色",
    Color = Color3.new(1, 1, 1),
    Flag = "ESPI_C_Doors_F",
    Callback = function(Color)
        -- 回调函数
    end
})
ESPI_C_DoorsToggle:CreateColorPicker({
    Name = "轮廓颜色",
    Color = Color3.new(1, 1, 1),
    Flag = "ESPI_C_Doors_O",
    Callback = function(Color)
        -- 回调函数
    end
})

-- 视觉效果标签页 - View
local VisualsViewSection = VisualsTab:CreateSection("View", true)

VisualsViewSection:CreateSlider({
    Name = "视角",
    Range = {0, 120},
    Increment = 1,
    Suffix = "度",
    CurrentValue = 0,
    Flag = "VV_FieldOfView",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateToggle({
    Name = "无相机抖动",
    CurrentValue = false,
    Flag = "VV_NoCamShake",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateToggle({
    Name = "无相机晃动",
    CurrentValue = false,
    Flag = "VV_NoLookBob",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateDivider()

local VV_ThirdpersonToggle = VisualsViewSection:CreateToggle({
    Name = "第三人称",
    CurrentValue = false,
    Flag = "VV_Thirdperson",
    Callback = function(Value)
        -- 回调函数
    end
})
VV_ThirdpersonToggle:CreateKeybind({
    Name = "Thirdperson",
    CurrentKeybind = "V",
    HoldToInteract = false,
    Flag = "VV_Thirdperson_K",
    Callback = function(Key)
        -- 按键回调
    end
})

VisualsViewSection:CreateToggle({
    Name = "墙检测",
    CurrentValue = false,
    Flag = "VV_ThirdpersonCamCollision",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "距离",
    Range = {5, 30},
    Increment = 1,
    Suffix = "单位",
    CurrentValue = 10,
    Flag = "VV_ThirdpersonDistance",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "偏移",
    Range = {-5, 5},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 0,
    Flag = "VV_ThirdpersonOffset",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "垂直偏移",
    Range = {-5, 5},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 0,
    Flag = "VV_ThirdpersonOffsetUp",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateDivider()

VisualsViewSection:CreateToggle({
    Name = "显示模型便宜",
    CurrentValue = false,
    Flag = "VV_ViewmodelOffset",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "X",
    Range = {-5, 5},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 0,
    Flag = "VV_ViewmodelOffset_X",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "Y",
    Range = {-5, 5},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 0,
    Flag = "VV_ViewmodelOffset_Y",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "Z",
    Range = {-5, 5},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 0,
    Flag = "VV_ViewmodelOffset_Z",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 视觉效果标签页 - 世界
local VisualsWorldSection = VisualsTab:CreateSection("世界", true)

local VW_AmbienceToggle = VisualsWorldSection:CreateToggle({
    Name = "高亮",
    CurrentValue = false,
    Flag = "VW_Ambience",
    Callback = function(Value)
        -- 回调函数
    end
})
VW_AmbienceToggle:CreateColorPicker({
    Name = "Ambience Color",
    Color = Color3.new(1, 1, 1),
    Flag = "VW_Ambience_C",
    Callback = function(Color)
        -- 回调函数
    end
})

VisualsWorldSection:CreateToggle({
    Name = "移除雾",
    CurrentValue = false,
    Flag = "VW_NoFog",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsWorldSection:CreateDivider()

VisualsWorldSection:CreateToggle({
    Name = "显示Rush/Ambush路径点",
    CurrentValue = false,
    Flag = "VW_RushNodes",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 视觉效果标签页 - 移除
local VisualsRemovalsSection = VisualsTab:CreateSection("移除", true)

VisualsRemovalsSection:CreateToggle({
    Name = "无Haste效果",
    CurrentValue = false,
    Flag = "VR_NoHasteEffect",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "没有hide晕影",
    CurrentValue = false,
    Flag = "VR_NoHidingVignette",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "无halt效果",
    CurrentValue = false,
    Flag = "VR_NoHaltEffect",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "无复活过场动画",
    CurrentValue = false,
    Flag = "VR_NoReviveCutscene",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateDivider()

VisualsRemovalsSection:CreateToggle({
    Name = "移除Timothy跳脸",
    CurrentValue = false,
    Flag = "VR_TimothyJumpscare",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "移除Glitch跳脸",
    CurrentValue = false,
    Flag = "VR_NoGlitchJumpscare",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "移除Void跳脸",
    CurrentValue = false,
    Flag = "VR_NoVoidEffect",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "移除Seek房间效果",
    CurrentValue = false,
    Flag = "VR_NoSeekEffects",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 杂项标签页 - Movement
local MiscMovementSection = MiscTab:CreateSection("Movement", true)

MiscMovementSection:CreateToggle({
    Name = "启用速度修饰符",
    CurrentValue = false,
    Flag = "MM_Walkspeed",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscMovementSection:CreateSlider({
    Name = "步行速度",
    Range = {10, 50},
    Increment = 1,
    Suffix = "单位",
    CurrentValue = 20,
    Flag = "MM_Walkspeed_S",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscMovementSection:CreateSlider({
    Name = "梯子速度提升",
    Range = {0, 50},
    Increment = 1,
    Suffix = "单位",
    CurrentValue = 0,
    Flag = "MM_Walkspeed_Boost",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscMovementSection:CreateDivider()

MiscMovementSection:CreateToggle({
    Name = "没有加速",
    CurrentValue = false,
    Flag = "MM_NoAcceleration",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 杂项标签页 - Audio
local MiscAudioSection = MiscTab:CreateSection("Audio", true)

MiscAudioSection:CreateToggle({
    Name = "静音干扰修改器",
    CurrentValue = false,
    Flag = "MA_SilentJammin",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscAudioSection:CreateDivider()

MiscAudioSection:CreateToggle({
    Name = "没有匆忙的声音",
    CurrentValue = false,
    Flag = "MA_NoHasteSound",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscAudioSection:CreateToggle({
    Name = "没有交互声",
    CurrentValue = false,
    Flag = "MA_SilentInteracting",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscAudioSection:CreateToggle({
    Name = "没有随机的氛围",
    CurrentValue = false,
    Flag = "MA_NoRandomAmbience",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscAudioSection:CreateToggle({
    Name = "沉默的苍蝇",
    CurrentValue = false,
    Flag = "MA_SilentGloombat",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 杂项标签页 - Other
local MiscellaneousOtherSection = MiscTab:CreateSection("Other", true)

MiscellaneousOtherSection:CreateToggle({
    Name = "没有Roblox Void",
    CurrentValue = false,
    Flag = "MO_antirobloxvoid",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscellaneousOtherSection:CreateDivider()

MiscellaneousOtherSection:CreateButton({
    Name = "Play Again",
    Callback = function()
        -- 回调函数
    end
})

MiscellaneousOtherSection:CreateButton({
    Name = "Lobby",
    Callback = function()
        -- 回调函数
    end
})

MiscellaneousOtherSection:CreateButton({
    Name = "Revive",
    Callback = function()
        -- 回调函数
    end
})

-- 配置标签页
local ConfigSection = ConfigTab:CreateSection("设置", true)

ConfigSection:CreateButton({
    Name = "保存配置",
    Callback = function()
        -- 回调函数
    end
})

ConfigSection:CreateButton({
    Name = "加载配置",
    Callback = function()
        -- 回调函数
    end
})

-- 加载UI
Rayfield:LoadConfiguration()local Rayfield = loadstring(game:HttpGet("https://gitee.com/roblox-smk/rayfield/raw/master/Rayfield"))()
local LocalPlayer = game.Players.LocalPlayer

local Window = Rayfield:CreateWindow({
    Name = "LOLHAX | "..LocalPlayer.Name,
    Icon = 0,
    LoadingTitle = "加载中",
    LoadingSubtitle = "LX脚本",
    Theme = "Default",
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,
    ConfigurationSaving = {
        Enabled = false,
        FolderName = nil,
        FileName = ""
    },
    Discord = {
        Enabled = false,
        Invite = "",
        RememberJoins = true
    },
    KeySystem = false,
    KeySettings = {
        Title = "",
        Subtitle = "",
        Note = "",
        FileName = "",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {""}
    }
})

-- 创建标签页
local GeneralTab = Window:CreateTab("主要功能")
local ExploitTab = Window:CreateTab("防怪")
local ESPTab = Window:CreateTab("透视")
local VisualsTab = Window:CreateTab("视觉效果")
local MiscTab = Window:CreateTab("杂项")
local ConfigTab = Window:CreateTab("配置")

-- 主要功能标签页
local GeneralAutomationSection = GeneralTab:CreateSection("Automation", true)

local GA_AutoInteractToggle = GeneralAutomationSection:CreateToggle({
    Name = "自动互动",
    CurrentValue = false,
    Flag = "GA_AutoInteract",
    Callback = function(Value)
        -- 回调函数
    end
})
GA_AutoInteractToggle:CreateKeybind({
    Name = "自动交互",
    CurrentKeybind = "R",
    HoldToInteract = true,
    Flag = "GA_AutoInteract_K",
    Callback = function(Key)
        -- 按键回调
    end
})

GeneralAutomationSection:CreateDropdown({
    Name = "自动交互选项",
    Options = {"Use Lockpick ( Doors )", "Use Lockpick ( Other )", "Ignore Light Sources", "Ignore Can-Die"},
    CurrentOption = {},
    MultipleOptions = true,
    Flag = "GA_AutoInteract_Options",
    Callback = function(Options)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateSlider({
    Name = "交互范围",
    Range = {1, 2},
    Increment = 1,
    Suffix = "单位",
    CurrentValue = 1,
    Flag = "GA_AutoInteract_Range",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateDivider()

local GA_EatCandiesToggle = GeneralAutomationSection:CreateToggle({
    Name = "自动吃糖果",
    CurrentValue = false,
    Flag = "GA_EatCandies",
    Callback = function(Value)
        -- 回调函数
    end
})
GA_EatCandiesToggle:CreateKeybind({
    Name = "自动使用糖果",
    CurrentKeybind = "V",
    HoldToInteract = true,
    Flag = "GA_EatCandies_K",
    Callback = function(Key)
        -- 按键回调
    end
})

GeneralAutomationSection:CreateToggle({
    Name = "自动隐藏",
    CurrentValue = false,
    Flag = "GA_AutoHide",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateToggle({
    Name = "预测可见检查",
    CurrentValue = false,
    Flag = "GA_AutoHide_VisCheck",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateSlider({
    Name = "预测时间",
    Range = {0.1, 1.5},
    Increment = 0.01,
    Suffix = "秒",
    CurrentValue = 0.5,
    Flag = "GA_AutoHide_PredictionTime",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateSlider({
    Name = "距离",
    Range = {0.8, 1.5},
    Increment = 0.1,
    Suffix = "倍",
    CurrentValue = 1,
    Flag = "GA_AutoHide_PredictionDistanceMultiplier",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateDivider()

local GA_MinecartInteractToggle = GeneralAutomationSection:CreateToggle({
    Name = "循环互动矿车",
    CurrentValue = false,
    Flag = "GA_MinecartInteract",
    Callback = function(Value)
        -- 回调函数
    end
})
GA_MinecartInteractToggle:CreateKeybind({
    Name = "矿车互动",
    CurrentKeybind = "H",
    HoldToInteract = true,
    Flag = "GA_MinecartInteract_K",
    Callback = function(Key)
        -- 按键回调
    end
})

GeneralAutomationSection:CreateToggle({
    Name = "自动解电器房",
    CurrentValue = false,
    Flag = "GA_AnchorAutoSolve",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateDivider()

GeneralAutomationSection:CreateToggle({
    Name = "自动解图书馆",
    CurrentValue = false,
    Flag = "GA_AutoPadlockSolve",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralAutomationSection:CreateSlider({
    Name = "自动开锁距离",
    Range = {10, 50},
    Increment = 1,
    Suffix = "单位",
    CurrentValue = 25,
    Flag = "GA_AutoPadlockSolve_Distance",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 主要功能标签页 - Notifying
local GeneralNotifyingSection = GeneralTab:CreateSection("Notifying", true)

GeneralNotifyingSection:CreateToggle({
    Name = "启用",
    CurrentValue = false,
    Flag = "GN_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateToggle({
    Name = "播放声音",
    CurrentValue = false,
    Flag = "GN_NotificationSound",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateSlider({
    Name = "音量",
    Range = {1, 10},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 2,
    Flag = "GN_NotificationSound_Volume",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateDivider()

GeneralNotifyingSection:CreateToggle({
    Name = "锁的密码",
    CurrentValue = false,
    Flag = "GN_AnchorCode",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateToggle({
    Name = "自动出图书馆锁密码",
    CurrentValue = false,
    Flag = "GN_PadlockCode",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateToggle({
    Name = "实体通知",
    CurrentValue = false,
    Flag = "GN_Entities",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateDropdown({
    Name = "实体列表",
    Options = {"Rush", "Blitz", "Ambush", "Eyes", "Lookman", "Halt", "Screech", "Gloombat Swarm", "Dread", "A-60", "A-120"},
    CurrentOption = {},
    MultipleOptions = true,
    Flag = "GN_Entities_Options",
    Callback = function(Options)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateDivider()

GeneralNotifyingSection:CreateDropdown({
    Name = "水平对齐",
    Options = {"Left", "Center", "Right"},
    CurrentOption = "Right",
    MultipleOptions = false,
    Flag = "GN_NotificationAlignment",
    Callback = function(Option)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateSlider({
    Name = "X偏移",
    Range = {-1, 1},
    Increment = 0.01,
    Suffix = "",
    CurrentValue = 0,
    Flag = "GN_NotificationOffset_X",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateSlider({
    Name = "Y偏移",
    Range = {-1, 1},
    Increment = 0.01,
    Suffix = "",
    CurrentValue = 0,
    Flag = "GN_NotificationOffset_Y",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateSlider({
    Name = "大小乘数",
    Range = {0.8, 3},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 1,
    Flag = "GN_NotificationDPISize",
    Callback = function(Value)
        -- 回调函数
    end
})

GeneralNotifyingSection:CreateButton({
    Name = "测试通知",
    Callback = function()
        -- 回调函数
    end
})

-- 防怪标签页 - Self
local ExploitSelfSection = ExploitTab:CreateSection("Self", true)

ExploitSelfSection:CreateToggle({
    Name = "总是开启跳跃",
    CurrentValue = false,
    Flag = "ES_AlwaysJump",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateDivider()

ExploitSelfSection:CreateToggle({
    Name = "防苍蝇蛋",
    CurrentValue = false,
    Flag = "ES_AntiGloombat",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反抱脸虫",
    CurrentValue = false,
    Flag = "ES_AntiGiggle",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反地刺",
    CurrentValue = false,
    Flag = "ES_AntiSnare",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反假门",
    CurrentValue = false,
    Flag = "ES_AntiDupe",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反Eyes",
    CurrentValue = false,
    Flag = "ES_AntiEyes",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反Lookman",
    CurrentValue = false,
    Flag = "ES_AntiLookman",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反Seek掉的灯",
    CurrentValue = false,
    Flag = "ES_AntiChanedlier",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitSelfSection:CreateToggle({
    Name = "反Seek触手",
    CurrentValue = false,
    Flag = "ES_AntiSeekArms",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 防怪标签页 - Bypass
local ExploitBypassSection = ExploitTab:CreateSection("Bypass", true)

ExploitBypassSection:CreateToggle({
    Name = "始终假蹲",
    CurrentValue = false,
    Flag = "EB_CrouchSpoof",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitBypassSection:CreateToggle({
    Name = "速度绕过",
    CurrentValue = false,
    Flag = "EB_SpeedBypass",
    Callback = function(Value)
        -- 回调函数
    end
})

local EB_ACManipulateToggle = ExploitBypassSection:CreateToggle({
    Name = "反作弊操纵",
    CurrentValue = false,
    Flag = "EB_ACManipulate",
    Callback = function(Value)
        -- 回调函数
    end
})
EB_ACManipulateToggle:CreateKeybind({
    Name = "Anti-Cheat Manipulate",
    CurrentKeybind = "T",
    HoldToInteract = true,
    Flag = "EB_ACManipulate_K",
    Callback = function(Key)
        -- 按键回调
    end
})

-- 防怪标签页 - Removals
local ExploitRemovalsSection = ExploitTab:CreateSection("Removals", true)

ExploitRemovalsSection:CreateToggle({
    Name = "移除Seek",
    CurrentValue = false,
    Flag = "ER_RemoveSeek",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateToggle({
    Name = "无Screech",
    CurrentValue = false,
    Flag = "ER_NoScreech",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateToggle({
    Name = "无A-90",
    CurrentValue = false,
    Flag = "ER_NoA90",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateToggle({
    Name = "无Halt",
    CurrentValue = false,
    Flag = "ER_NoShade",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateDivider()

ExploitRemovalsSection:CreateToggle({
    Name = "无A-90伤害",
    CurrentValue = false,
    Flag = "ER_NoA90Damage",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateToggle({
    Name = "无Screech伤害",
    CurrentValue = false,
    Flag = "ER_NoScreechDamage",
    Callback = function(Value)
        -- 回调函数
    end
})

ExploitRemovalsSection:CreateToggle({
    Name = "无Halt伤害",
    CurrentValue = false,
    Flag = "ER_NoShadeDamage",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 透视标签页 - Entities
local ESPEntitiesSection = ESPTab:CreateSection("Entities", true)

ESPEntitiesSection:CreateToggle({
    Name = "启用",
    CurrentValue = false,
    Flag = "ESPE_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPEntitiesSection:CreateDivider()

ESPEntitiesSection:CreateToggle({
    Name = "名字",
    CurrentValue = false,
    Flag = "ESPE_Name",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPEntitiesSection:CreateToggle({
    Name = "距离",
    CurrentValue = false,
    Flag = "ESPE_Distance",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPEntitiesSection:CreateToggle({
    Name = "突出显示填充",
    CurrentValue = false,
    Flag = "ESPE_Fill",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPEntitiesSection:CreateToggle({
    Name = "突出显示大纲",
    CurrentValue = false,
    Flag = "ESPE_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 透视标签页 - Players
local ESPPlayersSection = ESPTab:CreateSection("Players", true)

ESPPlayersSection:CreateToggle({
    Name = "启用",
    CurrentValue = false,
    Flag = "ESPP_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPPlayersSection:CreateDivider()

ESPPlayersSection:CreateToggle({
    Name = "名字",
    CurrentValue = false,
    Flag = "ESPP_Name",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPPlayersSection:CreateToggle({
    Name = "距离",
    CurrentValue = false,
    Flag = "ESPP_Distance",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPPlayersSection:CreateToggle({
    Name = "突出显示填充",
    CurrentValue = false,
    Flag = "ESPP_Fill",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPPlayersSection:CreateToggle({
    Name = "突出显示大纲",
    CurrentValue = false,
    Flag = "ESPP_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 透视标签页 - Interactables (Main)
local ESPInteractablesTabbox = ESPTab:CreateTabbox("Interactables")
local ESPInteractablesMainTab = ESPInteractablesTabbox:CreateTab("Main")

local ESPInteractablesMainSection = ESPInteractablesMainTab:CreateSection("Main", true)

ESPInteractablesMainSection:CreateToggle({
    Name = "启用",
    CurrentValue = false,
    Flag = "ESPI_M_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPInteractablesMainSection:CreateDivider()

ESPInteractablesMainSection:CreateToggle({
    Name = "名字",
    CurrentValue = false,
    Flag = "ESPI_M_Name",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPInteractablesMainSection:CreateToggle({
    Name = "距离",
    CurrentValue = false,
    Flag = "ESPI_M_Distance",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPInteractablesMainSection:CreateToggle({
    Name = "突出显示填充",
    CurrentValue = false,
    Flag = "ESPI_M_Fill",
    Callback = function(Value)
        -- 回调函数
    end
})

ESPInteractablesMainSection:CreateToggle({
    Name = "突出显示大纲",
    CurrentValue = false,
    Flag = "ESPI_M_Enabled",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 透视标签页 - Interactables (Configurate)
local ESPInteractablesConfigurateTab = ESPInteractablesTabbox:CreateTab("Configurate")

local ESPInteractablesConfigurateSection = ESPInteractablesConfigurateTab:CreateSection("Configurate", true)

local ESPI_C_DoorsToggle = ESPInteractablesConfigurateSection:CreateToggle({
    Name = "门",
    CurrentValue = false,
    Flag = "ESPI_C_Doors",
    Callback = function(Value)
        -- 回调函数
    end
})
ESPI_C_DoorsToggle:CreateColorPicker({
    Name = "文本颜色",
    Color = Color3.new(1, 1, 1),
    Flag = "ESPI_C_Doors_F",
    Callback = function(Color)
        -- 回调函数
    end
})
ESPI_C_DoorsToggle:CreateColorPicker({
    Name = "轮廓颜色",
    Color = Color3.new(1, 1, 1),
    Flag = "ESPI_C_Doors_O",
    Callback = function(Color)
        -- 回调函数
    end
})

-- 视觉效果标签页 - View
local VisualsViewSection = VisualsTab:CreateSection("View", true)

VisualsViewSection:CreateSlider({
    Name = "视角",
    Range = {0, 120},
    Increment = 1,
    Suffix = "度",
    CurrentValue = 0,
    Flag = "VV_FieldOfView",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateToggle({
    Name = "无相机抖动",
    CurrentValue = false,
    Flag = "VV_NoCamShake",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateToggle({
    Name = "无相机晃动",
    CurrentValue = false,
    Flag = "VV_NoLookBob",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateDivider()

local VV_ThirdpersonToggle = VisualsViewSection:CreateToggle({
    Name = "第三人称",
    CurrentValue = false,
    Flag = "VV_Thirdperson",
    Callback = function(Value)
        -- 回调函数
    end
})
VV_ThirdpersonToggle:CreateKeybind({
    Name = "Thirdperson",
    CurrentKeybind = "V",
    HoldToInteract = false,
    Flag = "VV_Thirdperson_K",
    Callback = function(Key)
        -- 按键回调
    end
})

VisualsViewSection:CreateToggle({
    Name = "墙检测",
    CurrentValue = false,
    Flag = "VV_ThirdpersonCamCollision",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "距离",
    Range = {5, 30},
    Increment = 1,
    Suffix = "单位",
    CurrentValue = 10,
    Flag = "VV_ThirdpersonDistance",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "偏移",
    Range = {-5, 5},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 0,
    Flag = "VV_ThirdpersonOffset",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "垂直偏移",
    Range = {-5, 5},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 0,
    Flag = "VV_ThirdpersonOffsetUp",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateDivider()

VisualsViewSection:CreateToggle({
    Name = "显示模型便宜",
    CurrentValue = false,
    Flag = "VV_ViewmodelOffset",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "X",
    Range = {-5, 5},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 0,
    Flag = "VV_ViewmodelOffset_X",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "Y",
    Range = {-5, 5},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 0,
    Flag = "VV_ViewmodelOffset_Y",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsViewSection:CreateSlider({
    Name = "Z",
    Range = {-5, 5},
    Increment = 0.1,
    Suffix = "",
    CurrentValue = 0,
    Flag = "VV_ViewmodelOffset_Z",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 视觉效果标签页 - 世界
local VisualsWorldSection = VisualsTab:CreateSection("世界", true)

local VW_AmbienceToggle = VisualsWorldSection:CreateToggle({
    Name = "高亮",
    CurrentValue = false,
    Flag = "VW_Ambience",
    Callback = function(Value)
        -- 回调函数
    end
})
VW_AmbienceToggle:CreateColorPicker({
    Name = "Ambience Color",
    Color = Color3.new(1, 1, 1),
    Flag = "VW_Ambience_C",
    Callback = function(Color)
        -- 回调函数
    end
})

VisualsWorldSection:CreateToggle({
    Name = "移除雾",
    CurrentValue = false,
    Flag = "VW_NoFog",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsWorldSection:CreateDivider()

VisualsWorldSection:CreateToggle({
    Name = "显示Rush/Ambush路径点",
    CurrentValue = false,
    Flag = "VW_RushNodes",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 视觉效果标签页 - 移除
local VisualsRemovalsSection = VisualsTab:CreateSection("移除", true)

VisualsRemovalsSection:CreateToggle({
    Name = "无Haste效果",
    CurrentValue = false,
    Flag = "VR_NoHasteEffect",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "没有hide晕影",
    CurrentValue = false,
    Flag = "VR_NoHidingVignette",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "无halt效果",
    CurrentValue = false,
    Flag = "VR_NoHaltEffect",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "无复活过场动画",
    CurrentValue = false,
    Flag = "VR_NoReviveCutscene",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateDivider()

VisualsRemovalsSection:CreateToggle({
    Name = "移除Timothy跳脸",
    CurrentValue = false,
    Flag = "VR_TimothyJumpscare",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "移除Glitch跳脸",
    CurrentValue = false,
    Flag = "VR_NoGlitchJumpscare",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "移除Void跳脸",
    CurrentValue = false,
    Flag = "VR_NoVoidEffect",
    Callback = function(Value)
        -- 回调函数
    end
})

VisualsRemovalsSection:CreateToggle({
    Name = "移除Seek房间效果",
    CurrentValue = false,
    Flag = "VR_NoSeekEffects",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 杂项标签页 - Movement
local MiscMovementSection = MiscTab:CreateSection("Movement", true)

MiscMovementSection:CreateToggle({
    Name = "启用速度修饰符",
    CurrentValue = false,
    Flag = "MM_Walkspeed",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscMovementSection:CreateSlider({
    Name = "步行速度",
    Range = {10, 50},
    Increment = 1,
    Suffix = "单位",
    CurrentValue = 20,
    Flag = "MM_Walkspeed_S",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscMovementSection:CreateSlider({
    Name = "梯子速度提升",
    Range = {0, 50},
    Increment = 1,
    Suffix = "单位",
    CurrentValue = 0,
    Flag = "MM_Walkspeed_Boost",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscMovementSection:CreateDivider()

MiscMovementSection:CreateToggle({
    Name = "没有加速",
    CurrentValue = false,
    Flag = "MM_NoAcceleration",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 杂项标签页 - Audio
local MiscAudioSection = MiscTab:CreateSection("Audio", true)

MiscAudioSection:CreateToggle({
    Name = "静音干扰修改器",
    CurrentValue = false,
    Flag = "MA_SilentJammin",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscAudioSection:CreateDivider()

MiscAudioSection:CreateToggle({
    Name = "没有匆忙的声音",
    CurrentValue = false,
    Flag = "MA_NoHasteSound",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscAudioSection:CreateToggle({
    Name = "没有交互声",
    CurrentValue = false,
    Flag = "MA_SilentInteracting",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscAudioSection:CreateToggle({
    Name = "没有随机的氛围",
    CurrentValue = false,
    Flag = "MA_NoRandomAmbience",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscAudioSection:CreateToggle({
    Name = "沉默的苍蝇",
    CurrentValue = false,
    Flag = "MA_SilentGloombat",
    Callback = function(Value)
        -- 回调函数
    end
})

-- 杂项标签页 - Other
local MiscellaneousOtherSection = MiscTab:CreateSection("Other", true)

MiscellaneousOtherSection:CreateToggle({
    Name = "没有Roblox Void",
    CurrentValue = false,
    Flag = "MO_antirobloxvoid",
    Callback = function(Value)
        -- 回调函数
    end
})

MiscellaneousOtherSection:CreateDivider()

MiscellaneousOtherSection:CreateButton({
    Name = "Play Again",
    Callback = function()
        -- 回调函数
    end
})

MiscellaneousOtherSection:CreateButton({
    Name = "Lobby",
    Callback = function()
        -- 回调函数
    end
})

MiscellaneousOtherSection:CreateButton({
    Name = "Revive",
    Callback = function()
        -- 回调函数
    end
})

-- 配置标签页
local ConfigSection = ConfigTab:CreateSection("设置", true)

ConfigSection:CreateButton({
    Name = "保存配置",
    Callback = function()
        -- 回调函数
    end
})

ConfigSection:CreateButton({
    Name = "加载配置",
    Callback = function()
        -- 回调函数
    end
})

-- 加载UI
Rayfield:LoadConfiguration()
