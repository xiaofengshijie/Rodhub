local Repository = "https://raw.githubusercontent.com/RectangularObject/LinoriaLib/main/"
local Library = loadstring(game:HttpGet(Repository .. "Library.lua"))()
local ThemeManager = loadstring(game:HttpGet(Repository .. "addons/ThemeManager.lua"))()
local SaveManager = loadstring(game:HttpGet(Repository .. "addons/SaveManager.lua"))()

-- 卡密系统配置
local ValidKeys = {
    "RODHUB-2024-PREMIUM",
    "RODHUB-VIP-ACCESS",
    "RODHUB-ULTIMATE-EDITION",
    "RODHUB-DEVELOPER-KEY"
}
local KeyAttempts = 0
local MaxAttempts = 3
local IsVerified = false

-- 创建主窗口（但暂不显示）
local MainWindow = Library:CreateWindow({
    Title = "Rodhub Premium",
    Center = true,
    AutoShow = false,  -- 初始不显示
    TabPadding = 12,
    MenuFadeTime = 0.2
})

-- 创建验证标签页（在主窗口中）
local AuthTab = MainWindow:AddTab("授权验证")
local AuthGroup = AuthTab:AddLeftGroupbox("产品激活")

-- 添加品牌标识
AuthGroup:AddLabel("Rodhub Premium")
AuthGroup:AddLabel("版本 2.0 | 高级版")
AuthGroup:AddDivider()

-- 卡密输入框
local KeyInput = AuthGroup:AddInput("KeyInput", {
    Default = "",
    Numeric = false,
    Finished = false,
    Text = "输入激活密钥",
    Placeholder = "RODHUB-XXXX-XXXX-XXXX",
    Tooltip = "请输入有效的激活密钥"
})

-- 验证函数
local function VerifyKey()
    local inputKey = KeyInput:GetValue()
    
    if inputKey == "" then
        Library:Notify("请输入激活密钥", 3)
        return false
    end
    
    -- 检查卡密有效性
    for _, validKey in ipairs(ValidKeys) do
        if inputKey == validKey then
            return true
        end
    end
    
    return false
end

-- 添加大尺寸验证按钮
local VerifyButton = AuthGroup:AddButton("验证密钥", function()
    if VerifyKey() then
        IsVerified = true
        Library:Notify("验证成功！欢迎使用 Rodhub", 5)
        
        -- 切换到主界面
        CreateMainUI()
        MainWindow:Show()  -- 显示主窗口
    else
        KeyAttempts = KeyAttempts + 1
        if KeyAttempts >= MaxAttempts then
            Library:Notify("验证失败次数过多，脚本已关闭", 5)
            wait(2)
            game:Shutdown()
        else
            local remaining = MaxAttempts - KeyAttempts
            Library:Notify("无效密钥! 剩余尝试次数: " .. remaining, 4)
        end
    end
end)

-- 设置按钮样式
VerifyButton:SetSize(UDim2.new(1, -20, 0, 48))
Library:ApplyButtonStyle(VerifyButton, {
    Roundness = 10,
    CustomHover = true,
    HoverColor = Color3.fromRGB(50, 150, 255)
})

-- 添加回车键支持
KeyInput:OnEnter(function()
    VerifyButton:Callback()
end)

-- 添加支持信息
local SupportGroup = AuthTab:AddRightGroupbox("支持")
SupportGroup:AddLabel("需要帮助？")
SupportGroup:AddLabel("联系: support@rodhub.com")
SupportGroup:AddDivider()
SupportGroup:AddButton("获取密钥", function()
    Library:Notify("请访问: rodhub.com/premium", 6)
end):SetSize(UDim2.new(1, -20, 0, 36))

-- 主界面创建函数
function CreateMainUI()
    -- 移除验证标签页
    MainWindow:RemoveTab(AuthTab)
    
    -- 创建主功能标签页
    local MainTab = MainWindow:AddTab("主面板")
    local SettingsTab = MainWindow:AddTab("设置")
    local FeaturesTab = MainWindow:AddTab("高级功能")

    -- 设置主题样式
    Library.ThemeManager.AccentColor = Color3.fromRGB(255, 85, 0)  -- Rodhub橙色主题
    Library.ThemeManager.ButtonStyle = {
        Roundness = 8,
        Size = UDim2.new(1, -20, 0, 48),
        TextSize = 16,
        CustomHover = true,
        CustomHoverColor = Color3.fromRGB(60, 60, 60)
    }

    -- 主面板分组
    local LeftPanel = MainTab:AddLeftGroupbox("核心功能")
    local RightPanel = MainTab:AddRightGroupbox("工具")

    -- 添加大尺寸功能按钮
    LeftPanel:AddButton("执行功能 A", function()
        Library:Notify("功能 A 已激活", 3)
    end):SetSize(UDim2.new(1, -20, 0, 48))

    LeftPanel:AddButton("执行功能 B", function()
        Library:Notify("功能 B 已启动", 3)
    end):SetSize(UDim2.new(1, -20, 0, 48))

    LeftPanel:AddDivider()

    LeftPanel:AddButton("高级设置", function()
        FeaturesTab:Select()
    end):SetSize(UDim2.new(1, -20, 0, 48))

    -- 右侧面板带图标按钮
    RightPanel:AddButton("资源加载器", function()
        Library:Notify("资源加载器已启动", 3)
    end):SetIcon("rbxassetid://10723385099"):SetSize(UDim2.new(1, -20, 0, 48))

    RightPanel:AddButton("性能分析", function()
        Library:Notify("性能分析运行中...", 3)
    end):SetIcon("rbxassetid://10723403910"):SetSize(UDim2.new(1, -20, 0, 48))

    RightPanel:AddDivider()

    local ToggleBtn = RightPanel:AddToggle("AutoFarm", {
        Text = "自动收集",
        Default = false,
        Tooltip = "启用自动收集功能"
    })

    ToggleBtn:AddKeyPicker("AutoFarmKey", {
        Default = "NumPad7",
        SyncToggleState = true,
        Mode = "Toggle",
        Text = "自动收集",
        NoUI = false
    })

    -- 设置面板
    local ThemeSettings = SettingsTab:AddLeftGroupbox("主题设置")
    ThemeSettings:AddDropdown("ThemeList", {
        Values = Library.ThemeManager.Themes,
        Default = 1,
        Multi = false,
        Text = "预设主题",
        Tooltip = "选择界面主题"
    })

    ThemeSettings:AddColorPicker("AccentColor", {
        Title = "主题颜色",
        Default = Library.ThemeManager.AccentColor
    })

    ThemeSettings:AddSlider("UIScale", {
        Text = "界面缩放",
        Default = 50,
        Min = 30,
        Max = 80,
        Rounding = 1,
        Compact = false
    })

    ThemeSettings:AddButton("保存设置", function()
        SaveManager:Save()
        Library:Notify("设置已保存!", 2)
    end):SetSize(UDim2.new(1, -20, 0, 40))

    -- 高级功能面板
    local PremiumFeatures = FeaturesTab:AddLeftGroupbox("高级功能")
    PremiumFeatures:AddLabel("Rodhub 专属功能")
    PremiumFeatures:AddDivider()
    
    PremiumFeatures:AddButton("超级加速", function()
        Library:Notify("超级加速已激活", 3)
    end):SetSize(UDim2.new(1, -20, 0, 48))
    
    PremiumFeatures:AddButton("隐身模式", function()
        Library:Notify("隐身模式已启用", 3)
    end):SetSize(UDim2.new(1, -20, 0, 48))
    
    PremiumFeatures:AddButton("资源解锁", function()
        Library:Notify("所有资源已解锁", 3)
    end):SetSize(UDim2.new(1, -20, 0, 48))

    -- 应用主题设置
    Library.ThemeManager:SetFolder("RodhubUI")
    Library.SaveManager:SetFolder("RodhubUI/settings")
    Library.SaveManager:IgnoreThemeSettings()
    Library.SaveManager:SetIgnoreIndexes({ "ThemeList" })

    -- 设置主题变化回调
    ThemeSettings.Elements.ThemeList.Dropdown.OnChanged = function()
        Library.ThemeManager:SetTheme(ThemeSettings.Elements.ThemeList.Dropdown.Value)
    end

    ThemeSettings.Elements.AccentColor.ColorPicker.OnChanged = function()
        Library.ThemeManager.AccentColor = ThemeSettings.Elements.AccentColor.ColorPicker.Value
    end

    ThemeSettings.Elements.UIScale.Slider.OnChanged = function(value)
        Library:ChangeScale(value / 50)
    end

    -- 初始化设置管理器
    SaveManager:BuildConfigSection(SettingsTab)
    Library:SetWatermarkVisibility(true)
    Library:SetWatermark("Rodhub Premium | 已激活")

    -- 加载设置
    SaveManager:LoadAutoloadConfig()
end

-- 初始设置
Library:SetWatermarkVisibility(true)
Library:SetWatermark("Rodhub | 等待验证...")

-- 显示验证窗口
MainWindow:Show()
